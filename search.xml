<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文件编码、字符集，编码集，UTF-8，GBK等</title>
      <link href="/2020/01/10/dfaft/%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/"/>
      <url>/2020/01/10/dfaft/%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="文件编码"><a href="#文件编码" class="headerlink" title="文件编码"></a>文件编码</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.jeepxie.net/article/271098.html" target="_blank" rel="noopener">参考链接1 -从字符编码的发展历史理解ANSI、GB2312、Unicode、UTF8和UTF16区别</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" target="_blank" rel="noopener">参考链接2 -字符编码</a></p><p><a href="https://pcbopcbo.github.io/files/wiki1.pdf">参考链接2 -字符编码pdf版</a></p><p><a href="https://blog.csdn.net/lxpblsc/article/details/9619295" target="_blank" rel="noopener">参考链接3 区位码、国标码、机内码的区别和内在机制 </a></p><p><a href="https://jerryc.me/posts/f5f84b52/" target="_blank" rel="noopener">[参考链接4  推荐阅读，总结的最好的一篇 关于字符编码，你所需要知道的]ASCII,Unicode,Ut</a> </p><p>[<a href="https://pcbopcbo.github.io/files/blog1.pdf">参考链接4 pdf版</a> </p><p><a href="https://baike.baidu.com/item/ISO8859/8581782?fromtitle=ISO-8859&fromid=834118" target="_blank" rel="noopener">参考链接5 百度百科 ISO8859</a></p><p><a href="https://www.cnblogs.com/tupx/articles/3503924.html" target="_blank" rel="noopener">参考链接6 编码的故事</a></p><p><a href="https://blog.csdn.net/lizhengyu891231/article/details/90900818" target="_blank" rel="noopener">参考链接7  MySQL UTF-8 使用请注意</a></p><h2 id="文件编码总结"><a href="#文件编码总结" class="headerlink" title="文件编码总结"></a>文件编码总结</h2><p>一直对于字符编码，编码集，utf-8，gbk，gb2312,iso8859,这样的概念搞得一脑袋懵，现在参考网上的一些知识，尝试下对它们做下总结。</p><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><p>关于字符编码、子集码、字符集、现代编码模型的解释，可以查看<a href="#参考链接">参考链接</a></p><p>以我自己的理解来说</p><ul><li><p><strong><em>字符编码</em></strong> 可以是指一个特定对象的编码，比如说三原色，把一种颜色称之为红，另外一种为绿，最一种为蓝。</p></li><li><p><strong><em>编码集</em></strong>，<strong><em>字符集</em></strong> , 不同的标准下编码的规则是不一致的，同一个标准下的编码单元集合就是一个字符集。计算机发展的早期，逐渐产生了<strong><em>ASCII(1963)</em></strong>和<strong><em>EBCDIC(1964)</em></strong>。这里也说 <strong><em>字符编码</em></strong>，<strong><em>编码集</em></strong>，<strong><em>字符集</em></strong>的概念也可以认为是一种概念，不过方便理解我自己区分了一下。</p></li><li><p><strong><em>简单字符集</em></strong>，应该就是指上面的<em>ASCII(1963)</em>和<em>EBCDIC(1964)</em>这两种字符编码时期的概念。</p></li><li><p><strong><em>现代编码模型</em></strong>，区别于<strong><em>简单字符集</em></strong>，由<strong><em>统一码</em></strong>和<strong><em>通用字符集</em></strong>构成。<strong><em>字符编码</em></strong>的概念被分解为：</p><ol><li>有哪些字符  (抽象字符表)</li><li>字符的编号  （编码字符集，引申出了编码空间，码位，码位值）</li><li>这些编号如何编码成一系列的“码元” （字符编码表）</li><li>如何组成八位字节流 （字符编码方案，将码元映射到8位字节序列，以便编码后数据的存储等，Unicode需要一个字符指定大端序小端序，utf-8不需要，ISO/IEC 2022 使用控制字符转义序列）（传输编码语法）</li></ol></li><li><p><strong><em>字符集</em></strong>，<strong><em>代码页</em></strong>，<strong><em>字符映射</em></strong></p><ul><li><p><strong><em>码元</em></strong>，已编码的文本中具有最短比特组合的单元，如utf-8是8比特长</p></li><li><p><strong><em>代码页</em></strong>，通常意味着面向字节的编码，强调是一套用于不能语言的编码方案的集合,如”windows”代码页系列，“IBM/DOW代码页系列”</p><ul><li>Unix与linux不使用代码页系列</li></ul></li></ul></li></ul><h3 id="多字节字符集（MBCS）和中文字符集"><a href="#多字节字符集（MBCS）和中文字符集" class="headerlink" title="多字节字符集（MBCS）和中文字符集"></a>多字节字符集（MBCS）和中文字符集</h3><p>理解了上面的概念，起码大概有一个印象（比如本人）接下来，可以查看参考链接4 的1.3章 <a href="#参考链接">参考链接</a> </p><p>单字节字符集是对于英文来说的，甚至于说是拉丁语系都没有问题，256个字符已经足够用了。但是对于其他语种，比如说是中文，单字节字符集已经不够用了。多字节字符集是兼容<strong><em>ASCII(1963)</em></strong>的。</p><p><strong><em>代码页</em></strong>，这里用到代码页的概念。</p><p>常用的中文字符集是GB2312、GBK，其中GB2312涵盖了所有的简体字符集和其他的字符，GBK(K代表扩展)加入了繁体字等，GB18030不常用到（本人没用过）</p><blockquote><p>Windows系统採用936代码页来实现对GBK字符集的编解码。在解析字节流的时候，如果遇到字节的最高位是0的话，那么就使用936代码页中的第1张码錶进行解码，这就和单字节字符集的编解码方式一致了。</p></blockquote><h3 id="ANSI标準、国家标準、ISO标準"><a href="#ANSI标準、国家标準、ISO标準" class="headerlink" title="ANSI标準、国家标準、ISO标準"></a>ANSI标準、国家标準、ISO标準</h3><blockquote><p>不同ASCII衍生字符集的出现，让文档交流变得非常困难，因此各种组织都陆续进行了标準化流程。例如美国ANSI组织制定了ANSI标準字符编码（注意，我们现在通常説到ANSI编码，通常指的是平台的默认编码，例如英文操作系统中是ISO-8859-1，中文系统是GBK），ISO组织制定的各种ISO标準字符编码，还有各国也会制定一些国家标準字符集，例如中国的GBK，GB2312和GB18030。</p></blockquote><h3 id="Unicode的出现"><a href="#Unicode的出现" class="headerlink" title="Unicode的出现"></a>Unicode的出现</h3><blockquote><p>虽然通过使用不同字符集，我们可以在一台机器上查閲不同语言的文档，但是我们仍然无法解决一个问题：在一份文档中显示所有字符。为了解决这个问题，我们需要一个全人类达成共识的巨大的字符集，这就是Unicode字符集。</p></blockquote><p>UTF-8应该是目前应用最广泛的一种Unicode编码方案。</p><p>文件编码格式的检测找不到一个可靠的工具，从上面的各个博客看来，各种兼容的历史问题导致的这一问题。</p><p>下面是遇到的一些编码的问题，应该都是从网上摘抄来的，备记一下，但是已经不记得出处了，抱歉抱歉。</p><h3 id="linux的cp936"><a href="#linux的cp936" class="headerlink" title="linux的cp936"></a>linux的cp936</h3><blockquote><p>一直为GB2312，GBK，GB18030和CP936之间的关系头痛，今天得到Python群里一位高人指点，明白了cp936就是指系统里第936号编码格式，也就是GB2312。 </p></blockquote><h3 id="vim设置读取不同编码格式的文件"><a href="#vim设置读取不同编码格式的文件" class="headerlink" title="vim设置读取不同编码格式的文件"></a>vim设置读取不同编码格式的文件</h3><p> 在 ~/.vimrc 文件中加入下面这段内容</p><blockquote><p>:set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936</p></blockquote><h3 id="设置别名，用来转换文件编码格式，参考使用"><a href="#设置别名，用来转换文件编码格式，参考使用" class="headerlink" title="设置别名，用来转换文件编码格式，参考使用"></a>设置别名，用来转换文件编码格式，参考使用</h3><blockquote><p>alias gbk2utf8=’iconv -f gbk -t utf-8’</p></blockquote><h3 id="查看支持的编码格式"><a href="#查看支持的编码格式" class="headerlink" title="查看支持的编码格式"></a>查看支持的编码格式</h3><blockquote><p>iconv -l|grep UTF-8</p></blockquote><h3 id="查看文件编码格式"><a href="#查看文件编码格式" class="headerlink" title="查看文件编码格式"></a>查看文件编码格式</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file  文件名</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">vim  文件</span><br><span class="line"></span><br><span class="line">:set fileencoding</span><br></pre></td></tr></table></figure></div><p>使用file命令查看文件的时候有时候会看到</p><p><a href="https://pcbopcbo.github.io/img/%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E.assets/1578990932276.png" data-fancybox="group" data-caption="1578990932276" class="fancybox"><img alt="1578990932276" title="1578990932276" data-src="https://pcbopcbo.github.io/img/%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E.assets/1578990932276.png" src="/img/loading.gif" class="lazyload"></a></p><p>4.txt中有数字字符，简体中文，繁体中文，非常令人迷惑！使用vim的时候可以看到是cp936。</p><blockquote><p><strong>sed -i ‘s/\r//’ filename</strong> </p><p>替换换行符的方式</p></blockquote><h3 id="mysql-的utf-8格式"><a href="#mysql-的utf-8格式" class="headerlink" title="mysql 的utf-8格式"></a>mysql 的utf-8格式</h3><p>mysql使用utf-8格式的时候一定要慎重，我们广为人知的utf-8格式在mysql中的名字是utf8mb4 ，这也是为了防止莫名其妙的乱码问题。</p>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo简单发布使用学习</title>
      <link href="/2020/01/07/hello-world/"/>
      <url>/2020/01/07/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo简单发布使用学习"><a href="#hexo简单发布使用学习" class="headerlink" title="hexo简单发布使用学习"></a>hexo简单发布使用学习</h1><p><a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">学习参考摘抄链接</a></p><h2 id="前置使用环境要求"><a href="#前置使用环境要求" class="headerlink" title="前置使用环境要求"></a>前置使用环境要求</h2><ul><li>git</li><li>nodejs</li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ol><li><p>安装hexo</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div></li><li><p>初始化</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init 初始化文件夹</span><br><span class="line">例如：hexo init MyBlog</span><br><span class="line">cd MyBlog      &#x2F;&#x2F;进入这个MyBlog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></div></li><li><p>本地查看</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g    &#x2F;&#x2F;生成静态文件</span><br><span class="line">hexo server(或者简写:hexo s）)  &#x2F;&#x2F; 打开本地服务</span><br></pre></td></tr></table></figure></div></li><li><p>书写文章</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git &#x2F;&#x2F; 安装扩展   （第一次用的这个后面新建文章报错了。。。）</span><br><span class="line">或者 npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">hexo new post &quot;articl title&quot;    &#x2F;&#x2F; 新建文章</span><br></pre></td></tr></table></figure></div><p> <em>Page Front-matter</em></p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: （tags,link,categories这三个页面需要配置）</span><br><span class="line">comments: (是否需要显示评论，默认true)</span><br><span class="line">description:</span><br><span class="line">top_img: (设置顶部图)</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div><p>   <em>Page Front-matter</em></p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: （除非特定需要，可以不写）</span><br><span class="line">comments  是否显示评论（除非设置false,可以不写）</span><br><span class="line">cover:  缩略图</span><br><span class="line">toc:  是否显示toc （除非特定文章设置，可以不写）</span><br><span class="line">toc_number: 是否显示toc数字 （除非特定文章设置，可以不写）</span><br><span class="line">copyright: 是否显示版权 （除非特定文章设置，可以不写）</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">hide:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div></li></ol><ol start="5"><li><p>发布</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean&#x2F;&#x2F; 清除静态文件</span><br><span class="line">hexo generate       &#x2F;&#x2F;生成静态</span><br><span class="line">hexo deploy(简写 hexo d)   &#x2F;&#x2F;上传到github并部署</span><br></pre></td></tr></table></figure></div><h2 id="hexo-定制使用"><a href="#hexo-定制使用" class="headerlink" title="hexo 定制使用"></a>hexo 定制使用</h2><p> <strong>中间发现git bash中无法使用tree，发现下面这个博客，</strong></p><p> <strong><a href="https://www.cnblogs.com/snowdreams1006/p/10812861.html" target="_blank" rel="noopener">真刚tree.exe</a></strong></p></li></ol><pre><code>![1578388385115](https://pcbopcbo.github.io/img/hello-world.assets/1578388385115.png)&gt; `node_modules`是`node.js`各种库的目录，`public`是生成的网页文件目录，`scaffolds`里面就三个文件，存储着新文章和新页面的初始设置，`source`是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，`themes`存放着主题文件，一般也用不到。&gt;&gt; 我们平时写文章只需要关注`source/_posts`这个文件夹就行了。&gt;&gt;  &gt;&gt; 来源: 洪卫の博客</code></pre><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><p>文件根目录的 <code>__config.yml</code> </p><p>​    <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">hexo官方文档</a></p><h2 id="不同电脑上如何快速转移"><a href="#不同电脑上如何快速转移" class="headerlink" title="不同电脑上如何快速转移"></a>不同电脑上如何快速转移</h2><p>瞎捣鼓了一阵子，发现最好最省事的方法就是</p><ul><li>重新布置一个全新的文件夹，按步骤来就行</li><li>把原来的source，theme，配置文件等覆盖过来就行了</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
