<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis简单阅读code</title>
      <link href="/2020/07/10/2020071017/"/>
      <url>/2020/07/10/2020071017/</url>
      
        <content type="html"><![CDATA[<h2 id="简单阅读code"><a href="#简单阅读code" class="headerlink" title="简单阅读code"></a>简单阅读code</h2><p><a href="https://zhuanlan.zhihu.com/p/68835431" target="_blank" rel="noopener">其他人的例子</a></p><h2 id="简单阅读code-1"><a href="#简单阅读code-1" class="headerlink" title="简单阅读code"></a>简单阅读code</h2><h3 id="自己的随手记-单一个mybatis，版本3-5-3"><a href="#自己的随手记-单一个mybatis，版本3-5-3" class="headerlink" title="自己的随手记  单一个mybatis，版本3.5.3"></a>自己的随手记  单一个mybatis，版本3.5.3</h3><h5 id="MybatisSetUp-java"><a href="#MybatisSetUp-java" class="headerlink" title="MybatisSetUp.java"></a>MybatisSetUp.java</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">String resource = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line">InputStream inputStream=<span class="keyword">null</span>;</span><br><span class="line">SqlSession sqlSession=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream,<span class="string">"mysql"</span>);</span><br><span class="line"></span><br><span class="line">sqlSession=sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">LockDemoMapper lockDemoMapper=sqlSession.getMapper(LockDemoMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">LockDemo lockDemo=lockDemoMapper.selectBalance(<span class="number">1</span>);</span><br><span class="line">String resultString=ReflectionToStringBuilder.toString(lockDemo);</span><br><span class="line">logger.info(<span class="string">"查询结果=&#123;&#125;"</span>,resultString);</span><br><span class="line"></span><br><span class="line">lockDemoMapper.addBalance(<span class="keyword">new</span> BigDecimal(<span class="string">"1.3"</span>),<span class="number">1</span>);</span><br><span class="line">sqlSession.commit();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span> (Throwable t)&#123;</span><br><span class="line">logger.error(<span class="string">"&#123;&#125;"</span>,t);</span><br><span class="line"><span class="keyword">if</span>(sqlSession!=<span class="keyword">null</span>)&#123;</span><br><span class="line">sqlSession.rollback();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">logger.error(<span class="string">""</span>,e);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(sqlSession!=<span class="keyword">null</span>)&#123;</span><br><span class="line">sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(inputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">inputStream.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">logger.error(<span class="string">""</span>,e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="获取SqlSessionFactory"><a href="#获取SqlSessionFactory" class="headerlink" title="获取SqlSessionFactory"></a>获取SqlSessionFactory</h4><h5 id="解析配置文件"><a href="#解析配置文件" class="headerlink" title="解析配置文件"></a>解析配置文件</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactory sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream,&quot;mysql&quot;);</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">parseConfiguration:106, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parse:98, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">build:78, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">build:68, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">main:27, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><h5 id="构建org-apache-ibatis-session-Configuration"><a href="#构建org-apache-ibatis-session-Configuration" class="headerlink" title="构建org.apache.ibatis.session.Configuration"></a>构建org.apache.ibatis.session.Configuration</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">private void parseConfiguration(XNode root) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            this.propertiesElement(root.evalNode(&quot;properties&quot;));</span><br><span class="line">            Properties settings &#x3D; this.settingsAsProperties(root.evalNode(&quot;settings&quot;));</span><br><span class="line">            this.loadCustomVfs(settings);</span><br><span class="line">            this.loadCustomLogImpl(settings);</span><br><span class="line">            this.typeAliasesElement(root.evalNode(&quot;typeAliases&quot;));</span><br><span class="line">            this.pluginElement(root.evalNode(&quot;plugins&quot;));</span><br><span class="line">            this.objectFactoryElement(root.evalNode(&quot;objectFactory&quot;));</span><br><span class="line">            this.objectWrapperFactoryElement(root.evalNode(&quot;objectWrapperFactory&quot;));</span><br><span class="line">            this.reflectorFactoryElement(root.evalNode(&quot;reflectorFactory&quot;));</span><br><span class="line">            this.settingsElement(settings);</span><br><span class="line">            this.environmentsElement(root.evalNode(&quot;environments&quot;));</span><br><span class="line">            this.databaseIdProviderElement(root.evalNode(&quot;databaseIdProvider&quot;));</span><br><span class="line">            this.typeHandlerElement(root.evalNode(&quot;typeHandlers&quot;));</span><br><span class="line">            this.mapperElement(root.evalNode(&quot;mappers&quot;));</span><br><span class="line">        &#125; catch (Exception var3) &#123;</span><br><span class="line">            throw new BuilderException(&quot;Error parsing SQL Mapper Configuration. Cause: &quot; + var3, var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h5 id="构建org-apache-ibatis-binding-MapperRegistry"><a href="#构建org-apache-ibatis-binding-MapperRegistry" class="headerlink" title="构建org.apache.ibatis.binding.MapperRegistry"></a>构建org.apache.ibatis.binding.MapperRegistry</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mapperElement:362, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parseConfiguration:119, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parse:98, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">build:78, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">build:68, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">main:27, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">private void mapperElement(XNode parent) throws Exception &#123;</span><br><span class="line">        if (parent !&#x3D; null) &#123;</span><br><span class="line">            Iterator var2 &#x3D; parent.getChildren().iterator();</span><br><span class="line"></span><br><span class="line">            while(true) &#123;</span><br><span class="line">                while(var2.hasNext()) &#123;</span><br><span class="line">                    XNode child &#x3D; (XNode)var2.next();</span><br><span class="line">                    String resource;</span><br><span class="line">                    if (&quot;package&quot;.equals(child.getName())) &#123;</span><br><span class="line">                        resource &#x3D; child.getStringAttribute(&quot;name&quot;);</span><br><span class="line">                        this.configuration.addMappers(resource);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        resource &#x3D; child.getStringAttribute(&quot;resource&quot;);</span><br><span class="line">                        String url &#x3D; child.getStringAttribute(&quot;url&quot;);</span><br><span class="line">                        String mapperClass &#x3D; child.getStringAttribute(&quot;class&quot;);</span><br><span class="line">                        XMLMapperBuilder mapperParser;</span><br><span class="line">                        InputStream inputStream;</span><br><span class="line">                        if (resource !&#x3D; null &amp;&amp; url &#x3D;&#x3D; null &amp;&amp; mapperClass &#x3D;&#x3D; null) &#123;</span><br><span class="line">                            ErrorContext.instance().resource(resource);</span><br><span class="line">                            inputStream &#x3D; Resources.getResourceAsStream(resource);</span><br><span class="line">                            mapperParser &#x3D; new XMLMapperBuilder(inputStream, this.configuration, resource, this.configuration.getSqlFragments());</span><br><span class="line">                            mapperParser.parse();</span><br><span class="line">                        &#125; else if (resource &#x3D;&#x3D; null &amp;&amp; url !&#x3D; null &amp;&amp; mapperClass &#x3D;&#x3D; null) &#123;</span><br><span class="line">                            ErrorContext.instance().resource(url);</span><br><span class="line">                            inputStream &#x3D; Resources.getUrlAsStream(url);</span><br><span class="line">                            mapperParser &#x3D; new XMLMapperBuilder(inputStream, this.configuration, url, this.configuration.getSqlFragments());</span><br><span class="line">                            mapperParser.parse();</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            if (resource !&#x3D; null || url !&#x3D; null || mapperClass &#x3D;&#x3D; null) &#123;</span><br><span class="line">                                throw new BuilderException(&quot;A mapper element may only specify a url, resource or class, but not more than one.&quot;);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            Class&lt;?&gt; mapperInterface &#x3D; Resources.classForName(mapperClass);</span><br><span class="line">                            this.configuration.addMapper(mapperInterface);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h5 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">addInterceptor:37, InterceptorChain (org.apache.ibatis.plugin)</span><br><span class="line">addInterceptor:763, Configuration (org.apache.ibatis.session)</span><br><span class="line">pluginElement:190, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parseConfiguration:110, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parse:98, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">build:78, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">build:68, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">main:27, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">private void pluginElement(XNode parent) throws Exception &#123;</span><br><span class="line">        if (parent !&#x3D; null) &#123;</span><br><span class="line">            Iterator var2 &#x3D; parent.getChildren().iterator();</span><br><span class="line"></span><br><span class="line">            while(var2.hasNext()) &#123;</span><br><span class="line">                XNode child &#x3D; (XNode)var2.next();</span><br><span class="line">                String interceptor &#x3D; child.getStringAttribute(&quot;interceptor&quot;);</span><br><span class="line">                Properties properties &#x3D; child.getChildrenAsProperties();</span><br><span class="line">                Interceptor interceptorInstance &#x3D; (Interceptor)this.resolveClass(interceptor).getDeclaredConstructor().newInstance();</span><br><span class="line">                interceptorInstance.setProperties(properties);</span><br><span class="line">                this.configuration.addInterceptor(interceptorInstance);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h6 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;init&gt;:40, Plugin (org.apache.ibatis.plugin)</span><br><span class="line">wrap:49, Plugin (org.apache.ibatis.plugin)</span><br><span class="line">plugin:28, Interceptor (org.apache.ibatis.plugin)</span><br><span class="line">pluginAll:31, InterceptorChain (org.apache.ibatis.plugin)</span><br><span class="line">newExecutor:615, Configuration (org.apache.ibatis.session)</span><br><span class="line">openSessionFromDataSource:96, DefaultSqlSessionFactory (org.apache.ibatis.session.defaults)</span><br><span class="line">openSession:47, DefaultSqlSessionFactory (org.apache.ibatis.session.defaults)</span><br><span class="line">main:29, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><h4 id="sqlSession-sqlSessionFactory-openSession"><a href="#sqlSession-sqlSessionFactory-openSession" class="headerlink" title="sqlSession=sqlSessionFactory.openSession();"></a>sqlSession=sqlSessionFactory.openSession();</h4><h5 id="关于plugin部分"><a href="#关于plugin部分" class="headerlink" title="关于plugin部分"></a>关于plugin部分</h5><h6 id="调用到Plugin"><a href="#调用到Plugin" class="headerlink" title="调用到Plugin"></a>调用到Plugin</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">invoke:61, Plugin (org.apache.ibatis.plugin)</span><br><span class="line">update:-1, $Proxy5 (com.sun.proxy)</span><br><span class="line">update:197, DefaultSqlSession (org.apache.ibatis.session.defaults)</span><br><span class="line">execute:67, MapperMethod (org.apache.ibatis.binding)</span><br><span class="line">invoke:93, MapperProxy (org.apache.ibatis.binding)</span><br><span class="line">addBalance:-1, $Proxy6 (com.sun.proxy)</span><br><span class="line">main:37, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><h6 id="Plugin-反射-Intercept"><a href="#Plugin-反射-Intercept" class="headerlink" title="Plugin 反射 Intercept"></a>Plugin 反射 Intercept</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">intercept:27, ExamplePlugin (cn.demo.stdemo.plugin)</span><br><span class="line">invoke:61, Plugin (org.apache.ibatis.plugin)</span><br><span class="line">update:-1, $Proxy5 (com.sun.proxy)</span><br><span class="line">update:197, DefaultSqlSession (org.apache.ibatis.session.defaults)</span><br><span class="line">execute:67, MapperMethod (org.apache.ibatis.binding)</span><br><span class="line">invoke:93, MapperProxy (org.apache.ibatis.binding)</span><br><span class="line">addBalance:-1, $Proxy6 (com.sun.proxy)</span><br><span class="line">main:37, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><h4 id="获取mapper"><a href="#获取mapper" class="headerlink" title="获取mapper"></a>获取mapper</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">newInstance:424, Constructor (java.lang.reflect)</span><br><span class="line">newProxyInstance:739, Proxy (java.lang.reflect)</span><br><span class="line">newInstance:47, MapperProxyFactory (org.apache.ibatis.binding)</span><br><span class="line">newInstance:52, MapperProxyFactory (org.apache.ibatis.binding)</span><br><span class="line">getMapper:50, MapperRegistry (org.apache.ibatis.binding)</span><br><span class="line">getMapper:779, Configuration (org.apache.ibatis.session)</span><br><span class="line">getMapper:291, DefaultSqlSession (org.apache.ibatis.session.defaults)</span><br><span class="line">main:32, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><h5 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">parseStatementNode:57, XMLStatementBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">buildStatementFromContext:137, XMLMapperBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">buildStatementFromContext:130, XMLMapperBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">configurationElement:120, XMLMapperBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parse:94, XMLMapperBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">mapperElement:374, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parseConfiguration:119, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">parse:98, XMLConfigBuilder (org.apache.ibatis.builder.xml)</span><br><span class="line">build:78, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">build:68, SqlSessionFactoryBuilder (org.apache.ibatis.session)</span><br><span class="line">main:27, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div><h5 id="resultHandler"><a href="#resultHandler" class="headerlink" title="resultHandler"></a>resultHandler</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">handleResult:43, DefaultResultHandler (org.apache.ibatis.executor.result)</span><br><span class="line">callResultHandler:370, DefaultResultSetHandler (org.apache.ibatis.executor.resultset)</span><br><span class="line">storeObject:363, DefaultResultSetHandler (org.apache.ibatis.executor.resultset)</span><br><span class="line">handleRowValuesForSimpleResultMap:355, DefaultResultSetHandler (org.apache.ibatis.executor.resultset)</span><br><span class="line">handleRowValues:328, DefaultResultSetHandler (org.apache.ibatis.executor.resultset)</span><br><span class="line">handleResultSet:301, DefaultResultSetHandler (org.apache.ibatis.executor.resultset)</span><br><span class="line">handleResultSets:194, DefaultResultSetHandler (org.apache.ibatis.executor.resultset)</span><br><span class="line">query:65, PreparedStatementHandler (org.apache.ibatis.executor.statement)</span><br><span class="line">query:79, RoutingStatementHandler (org.apache.ibatis.executor.statement)</span><br><span class="line">doQuery:63, SimpleExecutor (org.apache.ibatis.executor)</span><br><span class="line">queryFromDatabase:324, BaseExecutor (org.apache.ibatis.executor)</span><br><span class="line">query:156, BaseExecutor (org.apache.ibatis.executor)</span><br><span class="line">query:109, CachingExecutor (org.apache.ibatis.executor)</span><br><span class="line">query:83, CachingExecutor (org.apache.ibatis.executor)</span><br><span class="line">invoke0:-1, NativeMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:62, NativeMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:43, DelegatingMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:498, Method (java.lang.reflect)</span><br><span class="line">invoke:63, Plugin (org.apache.ibatis.plugin)</span><br><span class="line">query:-1, $Proxy5 (com.sun.proxy)</span><br><span class="line">selectList:147, DefaultSqlSession (org.apache.ibatis.session.defaults)</span><br><span class="line">selectList:140, DefaultSqlSession (org.apache.ibatis.session.defaults)</span><br><span class="line">selectOne:76, DefaultSqlSession (org.apache.ibatis.session.defaults)</span><br><span class="line">execute:87, MapperMethod (org.apache.ibatis.binding)</span><br><span class="line">invoke:93, MapperProxy (org.apache.ibatis.binding)</span><br><span class="line">selectBalance:-1, $Proxy6 (com.sun.proxy)</span><br><span class="line">main:33, MybatisSetUp (cn.demo.stdemo)</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      
        <tags>
            
            <tag> tls3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis缓存</title>
      <link href="/2020/07/07/2020070716/"/>
      <url>/2020/07/07/2020070716/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.mybatis.cn/archives/762.html" target="_blank" rel="noopener">http://www.mybatis.cn/archives/762.html</a></p></blockquote><p>计算机有两大基本的功能：计算和存储。在存储方面，缓存的设计和实现也是一门学问。这门学问里面包含什么门道呢？不妨研究一下 MyBatis 缓存类 PerpetualCache，一定会大有收获的。</p><p>在 MyBatis 里面，存在一个 PerpetualCache，它是一级缓存、二级缓存的最基本实现，但 PerpetualCache 只不过包装了一下 HashMap。Perpetual 是 “永久、不间断” 之意，以 PerpetualCache 为根本，在 cache.decorators 包里面有多种缓存的代理，实现了各种清除策略。</p><h2 id="1、PerpetualCache-名字的含义"><a href="#1、PerpetualCache-名字的含义" class="headerlink" title="1、PerpetualCache 名字的含义"></a>1、PerpetualCache 名字的含义</h2><p>Perpetual 是 “永久、不间断” 之意，为什么这么命名呢？稍加联系，便能明白。缓存的设计有两个重点问题：如何存储数据和采用何种清除策略。存储的话，用哈希表即可完美解决。对于清除策略而言，往往有多种选择。MyBatis 作者 Clinton Begin 选择 Perpetual 来命名缓存，暗示这是一个最底层的缓存，数据一旦存储进来，永不清除，如果实现清除策略，请把 Perpetual 包装一下。在 cache.decorators 包里面有多种缓存，它们内部串联的主线就是按照 “不同的清除策略” 来贯穿的。</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://www.mybatis.cn/usr/uploads/2019/10/297015096.jpg" src="/img/loading.gif" class="lazyload" title></a></p><h2 id="2、PerpetualCache-的实现原理："><a href="#2、PerpetualCache-的实现原理：" class="headerlink" title="2、PerpetualCache 的实现原理："></a>2、PerpetualCache 的实现原理：</h2><p>PerpetualCache 仅仅是包装了 HashMap，代码如下所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class PerpetualCache implements Cache </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  private final String id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  private Map&lt;Object, Object&gt; cache &#x3D; new HashMap&lt;Object, Object&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>PerpetualCache 的读取数据，也是通过内部的 HashMap 来实现的，代码如下所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line"></span><br><span class="line">public void putObject(Object key, Object value) &#123;</span><br><span class="line"></span><br><span class="line">cache.put(key, value);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line"></span><br><span class="line">public Object getObject(Object key) &#123;</span><br><span class="line"></span><br><span class="line">return cache.get(key);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line"></span><br><span class="line">public Object removeObject(Object key) &#123;</span><br><span class="line"></span><br><span class="line">return cache.remove(key);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line"></span><br><span class="line">public void clear() &#123;</span><br><span class="line"></span><br><span class="line">cache.clear();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="3、Key-的设计：CacheKey"><a href="#3、Key-的设计：CacheKey" class="headerlink" title="3、Key 的设计：CacheKey"></a>3、Key 的设计：CacheKey</h2><p>在 PerpetualCache 内部使用的 Java 自带的 HashMap：</p><p>Map&lt;Object, Object&gt; cache = new HashMap&lt;Object, Object&gt;();</p><p>但是，HashMap 的 Key 设计略显单薄，无法适应复杂的缓存场景，需要进行自定义设计。MyBatis 实现了 CacheKey 类，其功能非常的强大。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class CacheKey implements Cloneable, Serializable</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    private final int multiplier;</span><br><span class="line"></span><br><span class="line">    private int hashcode;</span><br><span class="line"></span><br><span class="line">    private long checksum;</span><br><span class="line"></span><br><span class="line">    private int count;</span><br><span class="line"></span><br><span class="line">    private List&lt;Object&gt; updateList;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>代码分析如下所示：</p><p>（1）hashcode，用于表示 CacheKey 的哈希码<br>（2）checksum，总和校验，当出现复合 key 的时候，分布计算每个 key 的哈希码，然后求总和<br>（3）count，当出现复合 key 的时候，计算 key 的总个数<br>（4）updateList，当出现复合 key 的时候，保存每个 key</p><p>CacheKey 这个类设计的非常好，个人推荐感兴趣的人可以仔细读一读其源码。其初始化的过程如下所示:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">public CacheKey(Object[] objects)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    this();</span><br><span class="line"></span><br><span class="line">    updateAll(objects);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public void updateAll(Object[] objects)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    for (Object o : objects)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        update(o);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public void update(Object object)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int baseHashCode &#x3D; object &#x3D;&#x3D; null ? 1 : ArrayUtil.hashCode(object);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    count++;</span><br><span class="line"></span><br><span class="line">    checksum +&#x3D; baseHashCode;</span><br><span class="line"></span><br><span class="line">    baseHashCode *&#x3D; count;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    hashcode &#x3D; multiplier * hashcode + baseHashCode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    updateList.add(object);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tls3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis相关链接点</title>
      <link href="/2020/07/07/2020070711/"/>
      <url>/2020/07/07/2020070711/</url>
      
        <content type="html"><![CDATA[<h2 id="Mybatis（Object-relation-mapping）"><a href="#Mybatis（Object-relation-mapping）" class="headerlink" title="Mybatis（Object relation mapping）"></a>Mybatis（Object relation mapping）</h2><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><pre><code>1. 不支持线程池，每次连接数据库的开销较大2. sql需要写在代码中，返回结果的处理需要硬编码，修改后需要整体编译3. 五步：加载驱动-&gt;创建连接-&gt;创建statement-&gt;执行sql-&gt;解析结果</code></pre><h3 id="MYBATIS"><a href="#MYBATIS" class="headerlink" title="MYBATIS"></a>MYBATIS</h3><pre><code>是一个封装了JDBC的对象关系映射框架，相比于原生的jdbc，节省了大量的重复性操作。从加载驱动到解析结果中，仅仅需要将必须的数据库配置信息、对象信息。但同时，又提供了相当一部分的灵活性，可以在不同的业务场景下允许架构人员进行灵活的扩展。可以使用xml或者注解配置或者映射原生信息，以对象作为参数动态生成执行sql，再通过映射获取结果对象。</code></pre><p>​<br>​<br><a href="https://mybatis.org/mybatis-3/zh/java-api.html" target="_blank" rel="noopener">Mybatis 官方网址</a><br>​<br><a href="https://zhuanlan.zhihu.com/p/121646778" target="_blank" rel="noopener">可关注点，一般这些也是比较常用的点</a></p><p><a href="https://zhuanlan.zhihu.com/p/66795003" target="_blank" rel="noopener">MyBatis框架详解!!!(上篇)</a></p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><pre><code>相对于jdbc，节省大量的编码与精力，专注于sql。基于jdbc的封装框架，所以可以很好的兼容数据库。非常容易的与spring集成提供xml便签，对象关系映射，面向表结构编程、灵活性高。</code></pre><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><pre><code>移植性差、sql语句编写量大。</code></pre><h4 id="适合场景"><a href="#适合场景" class="headerlink" title="适合场景"></a>适合场景</h4><pre><code>需求变化大、性能要求严格。</code></pre><h4 id="Hibernate-JPA"><a href="#Hibernate-JPA" class="headerlink" title="Hibernate/JPA"></a>Hibernate/JPA</h4><pre><code>Hibernate、JPA与Mybatis的争论各有各的理由，具体的起因分析等，可以阅读下面的知乎回答。</code></pre><p><a href="https://zhuanlan.zhihu.com/p/109324776" target="_blank" rel="noopener">为啥国人偏爱 Mybatis，而老外喜欢 Hibernate/JPA 呢？</a></p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="Mybatis VS Hibernate" class="fancybox"><img alt="Mybatis VS Hibernate" data-src="https://pic.downk.cc/item/5f04266314195aa594790bac.jpg" src="/img/loading.gif" class="lazyload" title="Mybatis VS Hibernate"></a></p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="Mybatis VS Hibernate2" class="fancybox"><img alt="Mybatis VS Hibernate2" data-src="https://pic.downk.cc/item/5f0426b014195aa59479296e.jpg" src="/img/loading.gif" class="lazyload" title="Mybatis VS Hibernate2"></a></p><h4 id="mybatis-一些插件扩展等"><a href="#mybatis-一些插件扩展等" class="headerlink" title="mybatis 一些插件扩展等"></a>mybatis 一些插件扩展等</h4><p><a href="https://github.com/abel533/Mapper" target="_blank" rel="noopener">tkmapper github地址</a></p><p><a href="https://github.com/abel533/Mapper/wiki/1.1-java" target="_blank" rel="noopener">tkmapper github文档地址</a></p><p><a href="https://mp.baomidou.com/" target="_blank" rel="noopener">Mybatis-Plus 地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tls3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用shell登录远程服务器执行多条命令，ssh登录之后执行脚本文件</title>
      <link href="/2020/06/23/2020062317/"/>
      <url>/2020/06/23/2020062317/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="https://www.cnblogs.com/HYanqing/p/11687498.html" target="_blank" rel="noopener">https://www.cnblogs.com/HYanqing/p/11687498.html</a></p></blockquote><p>这个需求主要是我在 jenkins 中 pipeline 的代码里，需要使用 shell 语言执行远程连接并且部署的工作，但是大多数的 shell 和服务器交互是使用 expect 解释器 就是之前我写过的那个关于 expect 有关的文章，问题是 jenkins 中默认的 shell 解释器只有 bash，不能更改解释器的。所以就很难受，国内的百度基本都是搬运过来的内容，毫无意义，浪费时间，在国外博客浪荡几天之后终于找到了解决方案。</p><p>下面我来分享一下，大致意思呢就是执行完 ssh 连接远程主机之后需要执行的命令，可以进行如下操作，命令不要照抄，换成你自己的 user 名和 ip 地址。</p><p>【我在我自己电脑和服务器之间都配置了 ssh 免密码登录 直接使用 ssh IP 地址就可以登录了，强烈建议配置 ssh，非常方便】</p><h2 id="1，登录远程主机执行单条命令"><a href="#1，登录远程主机执行单条命令" class="headerlink" title="1，登录远程主机执行单条命令"></a>1，登录远程主机执行单条命令</h2><p>登录完主机之后执行一条命令</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 $ ssh USER@HOST &#39;COMMAND&#39;</span><br></pre></td></tr></table></figure></div><p>获取远程主机的最新更新时间</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 $ ssh root@192.168.1.1 &#39;uptime&#39;</span><br></pre></td></tr></table></figure></div><p>登录完远程主机就进行重启远程主机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 $ ssh root@192.168.1.1 &#39;reboot&#39;</span><br></pre></td></tr></table></figure></div><p>那么问题出来了，上面的都是执行一条命令，那如果我需要执行多条命令怎么办呢？之前困扰我最大的问题就是这个，执行多条命令，虽然直接堆叠多条 ssh 登录的语句 那些前缀也可以，但是看着就恶心。这样我们就可以使用以下几个方案, 原内容如下，我做了备注，这样比较一目了然。</p><h2 id="2，登录远程主机执行多条命令"><a href="#2，登录远程主机执行多条命令" class="headerlink" title="2，登录远程主机执行多条命令"></a>2，登录远程主机执行多条命令</h2><p><a href="/img/loading.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.downk.cc/item/5ef1b03f14195aa594f06670.jpg" src="/img/loading.gif" class="lazyload" title></a></p><p> 可能还有小伙伴会问，如果需要 ssh 登录远程之后执行指定的脚本文件怎么做？</p><p>3，登录远程主机执行指定脚本文件<br> <a href="/img/loading.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.downk.cc/item/5ef1b07014195aa594f091ff.jpg" src="/img/loading.gif" class="lazyload" title></a> </p><p>由此来看，英文还是非常重要的。不然遇到问题你都不知道怎么去搜了，不是我埋汰百度，确实国内搬运回答问题现象太严重，点进去一个除了站点不一样 内容都一样 连错别字都一样，如果你是经常和计算机打交道的一定下载个谷歌浏览器，必须可以使用谷歌，可以配置插件或者配置翻墙设备。</p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作 SSH 登录远程服务器的 Shell 脚本</title>
      <link href="/2020/06/23/2020062316/"/>
      <url>/2020/06/23/2020062316/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="https://blog.csdn.net/kaikai136412162/article/details/80743641" target="_blank" rel="noopener">https://blog.csdn.net/kaikai136412162/article/details/80743641</a></p></blockquote><p>制作 SSH 登录远程服务器的 Shell 脚本</p><p>Ubuntu 环境需要安装 expect 安装包</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install expect</span><br></pre></td></tr></table></figure></div><p>使用 shell 脚本自动 ssh 登录远程服务器</p><p>login.sh</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;expect -f</span><br><span class="line"># 设置ssh连接的用户名</span><br><span class="line">set user liuben</span><br><span class="line"># 设置ssh连接的host地址</span><br><span class="line">set host 10.211.55.4</span><br><span class="line"># 设置ssh连接的port端口号</span><br><span class="line">set port 9999</span><br><span class="line"># 设置ssh连接的登录密码</span><br><span class="line">set password admin</span><br><span class="line"># 设置ssh连接的超时时间</span><br><span class="line">set timeout -1</span><br><span class="line"> </span><br><span class="line">spawn ssh $user@$host -p $port</span><br><span class="line">expect &quot;*password:&quot;</span><br><span class="line"># 提交密码</span><br><span class="line">send &quot;$password\r&quot;</span><br><span class="line"># 控制权移交</span><br><span class="line">interact</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 确定login.sh脚本有可执行权限</span><br><span class="line">chmod +x login.sh</span><br><span class="line"># 执行login.sh脚本</span><br><span class="line">.&#x2F;login.sh</span><br><span class="line"># 第二种给脚本有可执行权限</span><br><span class="line">[root]# chmod 777 .&#x2F;login.sh</span><br><span class="line">[root]# .&#x2F;login.sh</span><br><span class="line"> </span><br><span class="line"># 注意</span><br><span class="line">不能按照习惯来用sh login.sh来这行expect的程序，会提示找不到命令，如下：</span><br><span class="line"> </span><br><span class="line">login.sh: line 3: spawn: command not found</span><br><span class="line">couldn&#39;t read file &quot;*password:&quot;: no such file or directory</span><br><span class="line">login.sh: line 5: send: command not found</span><br><span class="line">login.sh: line 6: interact: command not found</span><br><span class="line">因为expect用的不是bash所以会报错。因为bash和expect的脚本指定了不同的脚本解释器</span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;expect -f</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">执行的时候直接.&#x2F;login.sh就可以了。～切记！</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis，Java 8 ，db官方网站链接</title>
      <link href="/2020/06/23/2020062318/"/>
      <url>/2020/06/23/2020062318/</url>
      
        <content type="html"><![CDATA[<p><a href="http://redisdoc.com/index.html" target="_blank" rel="noopener">redis手册</a></p><p><a href="https://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="noopener">redis-菜鸟教程</a></p><p><a href="http://doc.redisfans.com/" target="_blank" rel="noopener">redis命令参考</a></p><p><a href="https://pcbopcbo.github.io/files/OEBPS/Text/part0000.xhtml">Java 8实战 </a></p><p><a href="https://redis.io/" target="_blank" rel="noopener">redis官网</a></p><p><a href="http://try.redis.io/" target="_blank" rel="noopener">redis测试</a></p><p><a href="https://docs.oracle.com/javase/tutorial/" target="_blank" rel="noopener">Java 8官方</a></p><p><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/" target="_blank" rel="noopener">Java平台，标准版故障排除指南</a></p><p><a href="https://docs.oracle.com/javase/8/javase-books.htm" target="_blank" rel="noopener">java 文档</a></p><p><a href="https://dev.mysql.com/doc/" target="_blank" rel="noopener">mysql 官网</a></p><p><a href="https://dev.mysql.com/doc/mysql-getting-started/en/" target="_blank" rel="noopener">mysql 入门</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/tutorial.html" target="_blank" rel="noopener">mysql 手册1.2</a></p><p><a href="https://docs.oracle.com/cd/E17952_01/mysql-5.7-en/index.html" target="_blank" rel="noopener">MySQL 5.7参考手册</a></p><p><a href="http://www.searchdoc.cn/rdbms/mysql/dev.mysql.com/doc/refman/5.7/en/index.com.coder114.cn.html" target="_blank" rel="noopener">mysql 手册2</a></p><p><a href="https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/sql.html" target="_blank" rel="noopener">Oracle sql</a></p><p><a href="https://spring.io/guides#getting-started-guides" target="_blank" rel="noopener">Spring 官网文档</a></p><p><a href="http://mybatis.org/spring/zh/" target="_blank" rel="noopener">mybatis spring</a></p><p><a href="http://www.shouce.ren/" target="_blank" rel="noopener">手册网</a></p>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>开源配置管理中心 阿波罗（apollo）</title>
      <link href="/2020/05/15/2020051510/"/>
      <url>/2020/05/15/2020051510/</url>
      
        <content type="html"><![CDATA[<h1 id="开源配置管理中心-阿波罗（apollo）"><a href="#开源配置管理中心-阿波罗（apollo）" class="headerlink" title="开源配置管理中心 阿波罗（apollo）"></a>开源配置管理中心 阿波罗（apollo）</h1><h2 id="github地址"><a href="#github地址" class="headerlink" title="github地址"></a>github地址</h2><p><a href="https://github.com/ctripcorp/apollo" target="_blank" rel="noopener">apollo github地址</a><br><a href="https://gitee.com/nobodyiam/apollo" target="_blank" rel="noopener">gitee 不定时更新镜像地址</a></p><h2 id="快速入口"><a href="#快速入口" class="headerlink" title="快速入口"></a>快速入口</h2><p><a href="https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener">Apollo配置中心介绍</a></p><p>演示环境（Demo）:</p><p><a href="http://106.54.227.205/signin" target="_blank" rel="noopener">106.54.227.205</a><br>账号/密码:apollo/admin</p><p>在 2018 年度最受欢迎开源软件评选中，携程开源配置中心 Apollo 名列 Top20 之内，这一方面说明 Apollo 解决了微服务应用配置复杂的一大痛点，同时也说明社区对微服务需要集中配置的普遍认同。Apollo 配置中心架构相对复杂，但理解其架构对正确部署和使用 Apollo 非常重要，Apollo 本身采用微服务架构，使用了服务发现和软负载等分布式技术，它的核心组件和服务发现机制如下：</p><p>Client&amp;ConfigService：Apollo 客户端 Client 通过 ConfigService 感知并获取实时配置。两者的发现机制是，ConfigService 启动时首先注册到 Eureka，Client 再通过 MetaServer(相当于 Eureka Proxy) 获取 ConfigService 的地址列表，并通过客户端软负载的方式连接 ConfigService。这个连接采用 long pulling 方式，支持 ConfigService 实时推送数据到 Client，且 Client 会定期重连获取配置，实现推拉结合效果。<br>Portal&amp;AdminService:Portal 是给用户使用的配置管理 (添加、修改和发布等) 界面，AdminService 是实际操作配置的接口服务。两者的服务发现机制是，AdminService 启动时首先注册到 Eureka，Portal 再通过 MetaServer(Eureka Proxy)获取 AdminService 的地址列表，并通过客户端软负载的方式调用 AdminService。<br>Eureka&amp;MetaServer：Apollo 采用 Eureka 做服务发现。在服务提供端，ConfigService 和 AdminService 启动时会自动注册到 Eureka。服务消费端比较复杂，首先，Apollo 引入 MetaServer 以屏蔽 Eureka 服务发现接口的复杂性，简化多语言客户端接入，MetaServer 相当于是 Eureka Proxy；其次，MetaServer 无状态以集群方式部署，需要前置 Nginx 做负载均衡；最后，Client 和 Portal 通过 Nginx-&gt;MetaServer-&gt;Eureka 方式间接发现目标服务。<br>关于微服务配置中心 Apollo 架构，资深架构师杨波在极客时间「微服务架构实战 160 讲」中进行了详细的讲解，戳下面可试看。</p><p><a href="https://link.zhihu.com/?target=https%3A//time.geekbang.org/course/detail/84-8832">戳此试看「微服务配置中心 Apollo 架构与实战</a></p><p><a href="https://www.cnblogs.com/davidwang456/articles/9154260.html" target="_blank" rel="noopener">携程Apollo配置中心架构深度剖析</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>全网最全的高质量博客与网站（国内篇）（转载）</title>
      <link href="/2020/04/29/2020042911/"/>
      <url>/2020/04/29/2020042911/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="https://zhuanlan.zhihu.com/p/68386214" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/68386214</a></p></blockquote><blockquote><p>知乎收藏的一篇博客，推荐了很多个网站，无奈总是放在收藏里面吃灰，简悦转码后放在这里吧，希望以后能多去这几个网站逛逛，学习学习。</p></blockquote><blockquote><p>有几个网站已经过期了，也有些没有想象的好，有一个是R大真的进去就退出来了。</p></blockquote><blockquote><p>下面为转载内容：</p></blockquote><p>作为一个技术脑残粉，在学习技术的道路上怎么能忍受得了形单影只一路匍匐前行呢，怎么也得踩在巨人的肩膀上一路前行，啊呸，是站在巨人的肩膀上一路前行。大部分程序员在自学的路上都走过不少弯路，经常把自己搞得晕头转向的。就我自己来说，平时学习的过程中喜欢看一些比较系统、比较体系和一些教程式的博客和网站，所以废话不多说，今天给大家分享几个高质量的技术博客和网站。</p><p>一、博客</p><p>0、酷壳 - COOLSHELL</p><p>博客地址是 <a href="https://coolshell.cn/" target="_blank" rel="noopener">https://coolshell.cn/</a>。 这个博客的作者是技术圈基本无人不知的技术大牛，江湖人称耗子叔，网名左耳朵耗子，原名叫陈皓，先后在阿里巴巴、亚马逊、汤森路透等大企业担任要职，职业背景是金融和电子商务行业，主要研究方向是一些大规模分布式系统的基础架构。目前在创业，创办了 MegaEase 公司，致力于为企业提供高可用、高并发、高性能的分布式技术产品，同时也提供物联网（loT）方向的技术产品。从大学毕业到现在 20 多年了仍然在写代码，从 2002 年开始写技术博客，后面一直在现在这个博客上分享一些技术文章和一些技术见解和心得。</p><p>可以想象一下，现在很多年轻的技术大牛，当年学习的时候都从耗子叔的博客中受益，可见这个博客是有多么的硬核了吧？基本都不需要介绍太多，懂的人自然懂。在技术圈可以说是骨灰级的存在，人称骨灰级程序员。所以，首当其冲要推荐的就是耗子叔的博客，另外值得一提的是，作者在极客时间开办的专栏《左耳听风》也非常经典，订阅人数达到了恐怖的三万多人。需要重点提一下的是，博客中的《程序员练级攻略》和《程序员面试攻略》系列都堪称是经典中的经典。</p><p>1、孤傲苍狼</p><p>博客地址是　<a href="https://www.cnblogs.com/xdp-gacl/" target="_blank" rel="noopener">https://www.cnblogs.com/xdp-gacl/</a>。 这个博客主要以学习总结为主，目前博客已经不再更新，但依然还有将近两万的关注者，对于一个技术博客来说，能有如此之多的关注者，可以说是非常了不起了。博客上面出品了多个学习总结系列，如：Java 基础总结、Javascript 学习总结、JavaWeb 学习总结、Maven 学习总结、Android 开发学习总结等，全都是博主的亲身经历与总结，可以说全都是精品，都非常体系和全面，基本全都是图文并茂，相信你会有一种相见恨晚的感觉。</p><p>2、芋道源码</p><p>博客地址是　<a href="http://www.iocoder.cn" target="_blank" rel="noopener">http://www.iocoder.cn</a>。这个博客的座右铭是：愿半生编码，如一生老友。所以如果你也如博主这般，热爱技术，热爱源码，那么恭喜你来对了，这个博客一定是你的首选。这个博客目前出品了一系列精品的源码阅读，博主从学生时代开始阅读源码，一路升级打怪，现在已是大牛级别。目前已经出品的精品源码解析系列有：JDK 源码阅读、精尽 Dubbo 源码解析、精尽 Netty 源码解析、精尽 Spring 源码解析、精尽 MyBatis 源码解析、精尽 Spring MVC 源码解析等，同时还有一些其他非常优秀的非源码解析的系列也绝对值得一看，如：面试题汇总系列、学习指南汇总系列。</p><p>3、Java 技术驿站</p><p>博客地址是　<a href="http://cmsblogs.com/" target="_blank" rel="noopener">http://cmsblogs.com/</a>。 这个博客的作者是 chenssy，也是很厉害的一位技术大牛。博客出品了优秀的死磕系列，记得有次看到作者给读者的回复「学习如果不成体系那是多可怕的一件事儿」，这给我留下了非常深刻的印象。正如作者自己所言，学习要成体系，作者也是知行合一，打造了自成体系的精品死磕系列，在技术升级打怪的路上，怎么能少了这个优秀的博客呢？目前博客上出品的死磕系列有：死磕 Java 并发、死磕 Java 集合、死磕 Spring、死磕 SJDBC、死磕 Tomcat，都堪称是非常经典的了，其他的系列如微服务、架构 &amp; 分布式等也值得一看。</p><p>4、R 大</p><p>博客地址是　<a href="https://rednaxelafx.iteye.com/" target="_blank" rel="noopener">https://rednaxelafx.iteye.com/</a>。 引用作者在知乎的一个问题「R 大 @Rednaxelafx 的作品有哪些？」下的回答：</p><blockquote><p>俺是嘴炮型民科编程语言设计与实现爱好者。俺只有一些博客文章、知乎回答、知乎专栏、豆瓣读书笔记之类的。俺并没有什么 “作品”… 如果题主是想找俺自己开的开源项目的话，木有啊（汗~ 俺偶尔会参与现成的开源项目，吐点槽修个小 bug 啥的）。  </p></blockquote><p>一看作者就是在逗你玩儿呢，R 大的博客可以说是重核炸弹了，老实讲，看 R 大的博客会头皮发麻甚至会缺氧，知识点太密集，信息量太大。博客上面出品的文章有很多，作者精通多种语言，出品了经典的 Ruby 系列、C# 系列、Python 系列，但最出彩、最为人知的还是 Java 虚拟机、垃圾回收系列，文章的内容都很底层，所以都比较晦涩，不过还是推荐给需要的人，对 JVM、GC 这些底层感兴趣的童鞋，值得一看。</p><p>5、纯洁的微笑</p><p>博客地址是　<a href="http://www.ityouknow.com/" target="_blank" rel="noopener">http://www.ityouknow.com/</a>。 作者江湖人称「微笑哥」，人狠话不多，是一位有故事的程序员。曾在互联网金融公司，第三方支付公司工作，现为一名自由职业者。这个博客出品了一系列经典的 Spring Boot 和 Spring Cloud 的经典博文，在开源平台 github 上面的开源项目也广受欢迎。作者不但技术做得好，开源做得好，关键赚钱的点子也不少，非常爱折腾，有兴趣的童鞋可以收藏这个博客好好学习一番，和微笑哥一起用技术的角度去看看这个世界。</p><p>6、程序员 DD</p><p>博客地址是　<a href="http://blog.didispace.com/" target="_blank" rel="noopener">http://blog.didispace.com/</a>。 这个博客的专题不少，每个专题都写的很好，其中 Spring Boot 基础教程的专题目标是：打造全网最全、比收费教程更好的 Spring Boot 免费教程！可见作者是一位多么热爱分享又非常用心的博主了。同时，作者真的是一位实打实的技术大牛，不但出版过一本优秀的技术书籍《Spring Cloud 微服务实战》，而且个人的独立博客，在短短的三年时间内从零做到了千万访问，可以说真的是非常的了不起了。在这个博客中，除了可以获取《Spring Boot 1.x 基础教程》和《Spring Boot 2.x 基础教程》之外，还可以获取到目前内容与价格最良心的视频课程《玩转 Spring 全家桶》。</p><p>二、网站</p><p>0、http:/h/<a href="http://ow2j.cn/" target="_blank" rel="noopener">http://ow2j.cn/</a></p><p>这个网站主要聚焦 Java 方面的学习，从 Java 基础、Java 中级、Java 高级到 Java 应用，从前端到后端，从 Java 框架到工具和中间件等等，提供了一系列的免费教程，对初学者非常友好，上面还有相应的天猫前端、天猫整站 J2EE、天猫整站 SSH、天猫整站 SSM 和天猫整站 Springboot 等实战项目，当然有些是要钱的，但都不贵，上面的教程都挺不错，非常适合初学者。</p><p>1、金老师的自学网站</p><p>网址是 <a href="http://www.jinxuliang.com/MainWebSite" target="_blank" rel="noopener">http://www.jinxuliang.com/MainWebSite</a>。 这个网站是由北京理工大学计算机学院金旭亮老师开发与维护，致力于为计算机技术自学者提供有效的指导和丰富的在线自学资源。 目前提供了一系列的公益类课程，说白了也就是免费课程。这些在线课程旨在提供系统的、完整的、循序渐进的学习资料。当前版本以提供 PDF 文档、源码及课程说明为主，日后将开发更多的功能，逐步走向数据可视化、交互性在线练习，以最适合的方式呈现学习内容。目前已经提供的课程有：Java 程序设计、我的第一门编程课（C# 版）、网易 MOOC 课程《面向对象软件开发实践》辅助学习资源、Web 开发第一步、计算机专业学习指南、Web 前端开发入门等课程。</p><p>2、廖雪峰的官方网站</p><p>网址是 <a href="https://www.liaoxuefeng.com" target="_blank" rel="noopener">https://www.liaoxuefeng.com</a>。 作者廖雪峰是一位全栈工程师，Java、Python 老师，有十余年的软件开发经验，精通 Java/Python/Ruby/Scheme/Objective C 等技术，同时也是一位技术作家，著有《Spring 2.0 核心技术与最佳实践》一书，在 GitHub 上有多个开源项目。这个网站提供了经典的 JavaSE、JavaEE、JavaScript 和 Python、Git 等系列教程，我认识的不少技术大佬很多都在这个网站上面跟着 Python 和 Git 等经典教程学习过，非常值得收藏的一个网站。</p><p>3、leetcode 中国</p><p>网址是 <a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a>， 通常我们会直接在英文版的 leetcode 上刷题，但有时难免会遇到一些实在做不出来的题目，这时通常会到讨论区去参考别人的答案。但是，英文版的 leetcode 上很多分享也基本都是英文的，对于一些英文不太好，一看到密密麻麻的英文就烦的同学来说，这个网站还是很友好的。不愿去 leetcode 英文网站上刷题的同学可以考虑下 leetcode 中国，全中文，每道题的讨论区都有很多同学分享自己的解题思路和答案，可以去试试哦。</p><p>今天就先分享这么多吧，优秀的中文博客和网站实在是太多了，想要把我知道的全部都推荐给大家不现实，一篇文章也写不完，以上分享的都是我认为非常经典和实用的，有兴趣的同学按需所取。如果觉得还不够味，还希望我继续分享多几个优秀的中文博客或者网站的，可以公号后台给我留言或者加我微信给你分享。</p><p>预告一下，今天分享的是《全网最全的高质量博客与网站（国内篇）》, 下一篇我们将要分享的是《全网最全的高质量博客与网站（国外篇）》，一起期待吧～</p><p><strong>推荐阅读：</strong></p><p><a href="https://blog.csdn.net/Big_Rotor/article/details/88772371/" target="_blank" rel="noopener">Spring AOP 历险记（一）</a></p><p>​<a href="https://blog.csdn.net/Big_Rotor/article/details/91302133" target="_blank" rel="noopener">全网最全的高质量博客与网站（国外篇）</a></p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令汇总备记</title>
      <link href="/2020/01/21/2020012110/"/>
      <url>/2020/01/21/2020012110/</url>
      
        <content type="html"><![CDATA[<h2 id="只是备记"><a href="#只是备记" class="headerlink" title="只是备记"></a>只是备记</h2><p><a href="https://www.processon.com/embed/5e264f95e4b0d27af17e6ab2" target="_blank" rel="noopener">云笈七签的绯浅-腾讯-git命令，在这个图中可以看到git比较全的命令，如果一段时间不用git陌生了，可以来这里复习一下康康</a></p><h2 id="几个地址备份"><a href="#几个地址备份" class="headerlink" title="几个地址备份"></a>几个地址备份</h2><p><a href="https://learngitbranching.js.org/" target="_blank" rel="noopener">入门git使用推荐，里面是非常简单明了的git命令介绍使用，第一次使用请稍微用出打游戏的点点功力研究下，给很多人推荐却连开始第一步都没有迈进去</a></p><p><a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">廖雪峰的官方网站，不止是git，也有很多其他的教程</a></p><p><a href="https://jaeger.itscoder.com/dev/2018/09/12/using-git-in-project.html" target="_blank" rel="noopener">使用规范参考</a></p><p><a href="http://hungyuhei.github.io/2012/08/07/better-git-commit-graph-using-pull---rebase-and-merge---no-ff.html" target="_blank" rel="noopener">洁癖者用 Git：pull –rebase 和 merge –no-ff</a></p><p>上面这篇网址可能不能使用，我转载了过来</p><p><a href="https://pcbopcbo.github.io/2020/01/21/2020051511/">洁癖者用 Git：pull –rebase 和 merge –no-ff（转载）</a></p><p><a href="https://blog.csdn.net/MiMicoa/article/details/80297183" target="_blank" rel="noopener">git commit message 编写规范</a></p>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 随记 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洁癖者用 Git：pull --rebase 和 merge --no-ff（转载）</title>
      <link href="/2020/01/21/2020051511/"/>
      <url>/2020/01/21/2020051511/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="http://hungyuhei.github.io/2012/08/07/better-git-commit-graph-using-pull---rebase-and-merge---no-ff.html" target="_blank" rel="noopener">http://hungyuhei.github.io/2012/08/07/better-git-commit-graph-using-pull---rebase-and-merge---no-ff.html</a></p></blockquote><h2 id="pull-–rebase"><a href="#pull-–rebase" class="headerlink" title="pull –rebase"></a>pull –rebase</h2><h3 id="首先是吐嘈"><a href="#首先是吐嘈" class="headerlink" title="首先是吐嘈"></a>首先是吐嘈</h3><p><a href="/img/loading.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.downk.cc/item/5ef1ab8414195aa594ec35bd.jpg" src="/img/loading.gif" class="lazyload" title></a></p><p>如果你正在 code review，看到上图（下文将称之为：提交线图）之后，特别是像我这样有某种洁癖的人，是否感觉特别难受？如果是的话，请看下文吧 :)</p><h3 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h3><p>Git 作为分布式版本控制系统，所有修改操作都是基于本地的，在团队协作过程中，假设你和你的同伴在本地中分别有各自的新提交，而你的同伴先于你 push 了代码到远程分支上，所以你必须先执行 <code>git pull</code> 来获取同伴的提交，然后才能 push 自己的提交到远程分支。而按照 Git 的默认策略，如果远程分支和本地分支之间的提交线图有分叉的话（即不是 fast-forwarded），Git 会执行一次 merge 操作，因此产生一次没意义的提交记录，从而造成了像上图那样的混乱。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>其实在 pull 操作的时候，，使用 <code>git pull --rebase</code> 选项即可很好地解决上述问题。 加上 <code>--rebase</code> 参数的作用是，提交线图有分叉的话，Git 会 rebase 策略来代替默认的 merge 策略。 使用 rebase 策略有什么好处呢？借用一下 <code>man git-merge</code> 中的图就可以很好地说明清楚了。</p><p>假设提交线图在执行 pull 前是这样的：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">      A---B---C  remotes&#x2F;origin&#x2F;master</span><br><span class="line">     &#x2F;</span><br><span class="line">D---E---F---G  master</span><br></pre></td></tr></table></figure></div><p>如果是执行 <code>git pull</code> 后，提交线图会变成这样：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">      A---B---C remotes&#x2F;origin&#x2F;master</span><br><span class="line">     &#x2F;         \</span><br><span class="line">D---E---F---G---H master</span><br></pre></td></tr></table></figure></div><p>结果多出了 <code>H</code> 这个没必要的提交记录。如果是执行 <code>git pull --rebase</code> 的话，提交线图就会变成这样：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">            remotes&#x2F;origin&#x2F;master</span><br><span class="line">                |</span><br><span class="line">D---E---A---B---C---F&#39;---G&#39;  master</span><br></pre></td></tr></table></figure></div><p><code>F</code> <code>G</code> 两个提交通过 <code>rebase</code> 方式重新拼接在 <code>C</code> 之后，多余的分叉去掉了，目的达到。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>大多数时候，使用 <code>git pull --rebase</code> 是为了使提交线图更好看，从而方便 code review。</p><p>不过，如果你对使用 git 还不是十分熟练的话，我的建议是 <code>git pull --rebase</code> 多练习几次之后再使用，因为 <strong>rebase 在 git 中，算得上是『危险行为』</strong>。</p><p>另外，还需注意的是，使用 <code>git pull --rebase</code> 比直接 pull 容易导致冲突的产生，如果预期冲突比较多的话，建议还是直接 pull。</p><h2 id="merge-–no-ff"><a href="#merge-–no-ff" class="headerlink" title="merge –no-ff"></a>merge –no-ff</h2><p>上述的 <code>git pull --rebase</code> 策略目的是修整提交线图，使其形成一条直线，而即将要用到的 <code>git merge --no-ff &lt;branch-name&gt;</code> 策略偏偏是反行其道，刻意地弄出提交线图分叉出来。</p><p>假设你在本地准备合并两个分支，而刚好这两个分支是 fast-forwarded 的，那么直接合并后你得到一个直线的提交线图，当然这样没什么坏处，但如果你想更清晰地告诉你同伴：<strong>这一系列的提交都是为了实现同一个目的</strong>，那么你可以刻意地将这次提交内容弄成一次提交线图分叉。</p><p>执行 <code>git merge --no-ff &lt;branch-name&gt;</code> 的结果大概会是这样的：</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.downk.cc/item/5ef1abbb14195aa594ec6abf.jpg" src="/img/loading.gif" class="lazyload" title></a></p><p>中间的分叉线路图很清晰的显示这些提交都是为了实现 <strong>complete adjusting user domains and tags</strong></p><h3 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h3><p>往往我的习惯是，在合并分支之前（假设要在本地将 feature 分支合并到 dev 分支），会先检查 feature 分支是否『部分落后』于<strong>远程 dev 分支</strong>：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout dev</span><br><span class="line">git pull # 更新 dev 分支</span><br><span class="line">git log feature..dev</span><br></pre></td></tr></table></figure></div><p>如果没有输出任何提交信息的话，即表示 feature 对于 dev 分支是 up-to-date 的。如果有输出的话而马上执行了 <code>git merge --no-ff</code> 的话，提交线图会变成这样：</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://ww2.sinaimg.cn/large/a74e55b4jw1dvnijr276hj.jpg" src="/img/loading.gif" class="lazyload" title></a></p><p>所以这时在合并前，通常我会先执行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout feature</span><br><span class="line">git rebase dev</span><br></pre></td></tr></table></figure></div><p>这样就可以将 feature 重新拼接到更新了的 dev 之后，然后就可以合并了，最终得到一个干净舒服的提交线图。</p><p><strong>再次提醒：像之前提到的，rebase 是『危险行为』，建议你足够熟悉 git 时才这么做，否则的话是得不偿失啊。</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>使用 <code>git pull --rebase</code> 和 <code>git merge --no-ff</code> 其实和直接使用 <code>git pull</code> <code>git merge</code> 得到的代码应该是一样。</p><p>使用 <code>git pull --rebase</code> 主要是为是将提交约线图平坦化，而 <code>git merge --no-ff</code> 则是刻意制造分叉。</p><p>一言以蔽之：如果你有点洁癖症状，才考虑用它们吧。</p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell命令笔记</title>
      <link href="/2020/01/20/2020012015/"/>
      <url>/2020/01/20/2020012015/</url>
      
        <content type="html"><![CDATA[<h1 id="shell命令笔记"><a href="#shell命令笔记" class="headerlink" title="shell命令笔记"></a>shell命令笔记</h1><p>事先声明，本人就是一个菜鸟，这篇博客也就是为了学习下大佬的博客。</p><p> 陈皓和雷俊(Javaer/Emacser)-<a href="https://coolshell.cn/articles/19219.html" target="_blank" rel="noopener">打造高效的工作环境 – SHELL 篇</a></p><p> 无意间翻出来的，备注下链接，一点一点慢慢吸取下。</p><h2 id="下面两篇是文中提到的两篇博客，有趣也有用的。"><a href="#下面两篇是文中提到的两篇博客，有趣也有用的。" class="headerlink" title="下面两篇是文中提到的两篇博客，有趣也有用的。"></a>下面两篇是文中提到的两篇博客，有趣也有用的。</h2><p> <a href="https://coolshell.cn/articles/8619.html" target="_blank" rel="noopener">你可能不知道的SHELL</a><br> <a href="https://coolshell.cn/articles/8883.html" target="_blank" rel="noopener">应该知道的LINUX技巧</a></p><h3 id="又从里面看到的，算了我全都放这里了，慢慢啃吧"><a href="#又从里面看到的，算了我全都放这里了，慢慢啃吧" class="headerlink" title="又从里面看到的，算了我全都放这里了，慢慢啃吧"></a>又从里面看到的，算了我全都放这里了，慢慢啃吧</h3><ul><li><p><a href="https://coolshell.cn/articles/7829.html" target="_blank" rel="noopener">28个UNIX/LINUX的命令行神器</a></p></li><li><p>这个我没打开，网有点慢？<a href="https://coolshell.cn/articles/7166.html" target="_blank" rel="noopener">游戏：VIM大冒险</a></p></li><li><p><strong><em>简直是个宝藏：</em></strong> <a href="https://coolshell.cn/articles/7186.html" target="_blank" rel="noopener">做个环保主义的程序员</a></p></li><li><p><a href="https://coolshell.cn/articles/7126.html" target="_blank" rel="noopener">这到底是谁之错？</a></p></li></ul><h2 id="顺便把收藏的linux基本命令的流程图放上来"><a href="#顺便把收藏的linux基本命令的流程图放上来" class="headerlink" title="顺便把收藏的linux基本命令的流程图放上来"></a>顺便把收藏的linux基本命令的流程图放上来</h2><p> <a href="https://www.processon.com/view/58f47536e4b0dfe7d6c93460#map" target="_blank" rel="noopener">基础的linux基本命令图</a></p><h2 id="摘抄-笔记"><a href="#摘抄-笔记" class="headerlink" title="摘抄+笔记"></a>摘抄+笔记</h2><h3 id="链接一：-你可能不知道的SHELL"><a href="#链接一：-你可能不知道的SHELL" class="headerlink" title="链接一： 你可能不知道的SHELL"></a>链接一： <a href="https://coolshell.cn/articles/8619.html" target="_blank" rel="noopener">你可能不知道的SHELL</a></h3><ul><li><p><code>!$</code></p><p>这是个特殊的变量，代表上一个命令的最后一个字符串</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="!$示例" class="fancybox"><img alt="!$示例" data-src="https://pic.downk.cc/item/5ef17b1c14195aa594be5eb1.gif" src="/img/loading.gif" class="lazyload" title="!$示例"></a></p></li></ul><ul><li><p><code>sudo !!</code> </p><p>以root的身份执行上一条命令  </p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="shell_02" class="fancybox"><img alt="shell_02" data-src="https://pic.downk.cc/item/5ef17bbc14195aa594bf4b72.gif" src="/img/loading.gif" class="lazyload" title="shell_02"></a></p></li><li><p><code>cd -</code></p><p>回到上一次的目录</p><p><code>cd ~</code> 是回到自己的Home目录，<code>cd ~user</code>，是进入某个用户的Home目录 </p></li><li><p><code>ALT+.</code> or <code>&lt;ESC&gt; .</code> </p><p>可以把上次命令的参数给重复出来。试了以下，没有想象中的好用。</p></li><li><p><code>^old^new</code> </p><p>替换前一条命令里的部分字符串。  </p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="shell_03" class="fancybox"><img alt="shell_03" data-src="https://pic.downk.cc/item/5ef17bf714195aa594bfa1c4.gif" src="/img/loading.gif" class="lazyload" title="shell_03"></a></p></li><li><p><code>du -s *| sort -n | tail</code></p><p>列出当前目录里最大的10个文件 </p></li><li><p><code>:w !sudo tee %</code></p><p>保存一个只有root可以写的文件，存疑。。。</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="shell_04" class="fancybox"><img alt="shell_04" data-src="https://pic.downk.cc/item/5ef17c1f14195aa594bfe1c7.gif" src="/img/loading.gif" class="lazyload" title="shell_04"></a></p></li><li><p><code>date -d@1234567890</code> </p><p>时间戳转时间，说不定啥时候调bug会用到。</p></li></ul><p><a href="/img/loading.gif" data-fancybox="group" data-caption="1579512240869" class="fancybox"><img alt="1579512240869" data-src="https://pcbopcbo.github.io/img/2020012015.assets/1579512240869.png" src="/img/loading.gif" class="lazyload" title="1579512240869"></a></p><ul><li><p><code>&gt; file.txt</code></p><p>创建一个空文件，或者可以用 t<code>ouch file.txt</code>,不过这个确实短一些。</p></li><li><p>mtr coolshell.cn</p><p>这个，平时不搞这个，放过吧，虚拟机里面一个也没有。不过说是mtr命令比traceroute要好。 </p></li></ul><ul><li><p>在命令行前加空格，该命令不会进入history里。  </p></li><li><p><code>echo &quot;ls -l&quot; | at midnight</code></p><p>在某个时间运行某个命令。又是一个没有见过的命令，先搜个博客</p><p><a href="https://blog.51cto.com/12822117/2121101" target="_blank" rel="noopener">linux中at命令详解</a></p><p><a href="https://www.cnblogs.com/diantong/p/9366449.html" target="_blank" rel="noopener">linux命令之at</a></p></li><li><p><code>curl -u user:pass -d status=&quot;Tweeting from the shell&quot; http://twitter.com/statuses/update.xml</code></p><p>命令行的方式更新twitter。</p></li><li><p><code>curl -u username --silent &quot;https://mail.google.com/mail/feed/atom&quot; | perl -ne &#39;print &quot;\t&quot; if /&lt;name&gt;/; print &quot;$2\n&quot; if /&lt;(title|name)&gt;(.*)&lt;\/\1&gt;/;&#39;</code></p><p>检查你的gmail未读邮件。</p></li><li><p><code>ps aux | sort -nk +4 | tail</code></p><p>列出头十个最耗内存的进程</p></li><li><p><code>man ascii</code></p><p>显示ascii码表。</p></li><li><p><code>ctrl-x e</code></p><p>快速启动你的默认编辑器（由变量$EDITOR设置）。</p></li><li><p><code>netstat –tlnp</code><br>列出本机进程监听的端口号。</p></li><li><p><code>netstat -anop</code><br>可以显示侦听在这个端口号的进程</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="对比下，感觉上一个没啥用？" class="fancybox"><img alt="对比下，感觉上一个没啥用？" data-src="https://pcbopcbo.github.io/img/2020012015.assets/1579575056177.png" src="/img/loading.gif" class="lazyload" title="对比下，感觉上一个没啥用？"></a></p></li><li><p><code>tail -f /path/to/file.log | sed &#39;/^Finished: SUCCESS$/ q&#39;</code></p><p>当file.log里出现Finished: SUCCESS时候就退出tail，这个命令用于实时监控并过滤log是否出现了某条记录。<br>这个不错</p></li><li><p><code>ssh user@server bash &lt; /path/to/local/script.sh</code></p><p>在远程机器上运行一段脚本。这条命令最大的好处就是不用把脚本拷到远程机器上。</p><p>不知道怎么才能指定目录执行，不然脚本写的有点死。</p></li><li><p><code>ssh user@host cat /path/to/remotefile | diff /path/to/localfile -</code></p><p>比较一个远程文件和一个本地文件.  感觉我首先得学会看diff命令。</p></li><li><p><code>net rpc shutdown -I ipAddressOfWindowsPC -U username%password</code></p><p>远程关闭一台Windows的机器</p></li><li><p><code>screen -d -m -S some_name ping my_router</code></p><p>后台运行一段不终止的程序，并可以随时查看它的状态。-d -m参数启动“分离”模式，-S指定了一个session的标识。可以通过-R命令来重新“挂载”一个标识的session。更多细节请参考screen用法 man screen。</p></li><li><p><code>wget --random-wait -r -p -e robots=off -U mozilla http://www.example.com</code></p><p>下载整个 <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 网站。（大佬注：别太过分，大部分网站都有防爬功能了：））</p></li><li><p><code>curl ifconfig.me</code></p><p>当你的机器在内网的时候，可以通过这个命令查看外网的IP</p><p>这个没搞懂，一个结果看不懂，一个干脆就是不通</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="1579578337692" class="fancybox"><img alt="1579578337692" data-src="https://pcbopcbo.github.io/img/2020012015.assets/1579578337692.png" src="/img/loading.gif" class="lazyload" title="1579578337692"></a></p></li><li><p><code>convert input.png -gravity NorthWest -background transparent -extent 720x200  output.png</code></p><p>改一下图片的大小尺寸。虚拟机没装convert这个命令，centos精简版好多没有啊。</p></li><li><p><code>isof -i</code></p><p>实时查看本机网络服务的活动状态。</p></li><li><p><code>vim scp://username@host//path/to/somefile</code></p><p>vim一个远程文件</p></li><li><p><code>python -m SimpleHTTPServer</code><br>一句话实现一个HTTP服务，把当前目录设为HTTP服务目录，可以通过 <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a> 访问 这也许是这个星球上最简单的HTTP服务器的实现了。<br>这个挺有用的，需要python，linux上面应该都带了python。</p></li><li><p><code>history|awk &#39;{print $2}&#39;|awk &#39;BEGIN {FS=&quot;|&quot;}{print $1}&#39;|sort|uniq -c|sort -rn|head -10</code></p><p>这行脚本能输出你最常用的十条命令，由此甚至可以洞察你是一个什么类型的程序员。</p><p>原文中的这行命令引号可能错了，我直接复制粘贴不行，我重新敲了一遍。</p></li><li><p><code>tr -c &quot;[:digit:]&quot; &quot; &quot; &lt; /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR=&quot;1;32&quot; grep --color &quot;[^ ]&quot;</code></p><p>想看看Marix的屏幕效果吗？（不是很像，但也很Cool!）</p><p>停不下来，，按了几下<code>ctrl</code>+<code>c</code> 才停下来，蛮有意思的。</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="shell_05" class="fancybox"><img alt="shell_05" data-src="https://pic.downk.cc/item/5ef17cc214195aa594c0cd51.gif" src="/img/loading.gif" class="lazyload" title="shell_05"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 随记 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim基本技巧笔记</title>
      <link href="/2020/01/19/2020011913/"/>
      <url>/2020/01/19/2020011913/</url>
      
        <content type="html"><![CDATA[<h1 id="vim基本技巧笔记"><a href="#vim基本技巧笔记" class="headerlink" title="vim基本技巧笔记"></a>vim基本技巧笔记</h1><p><a href="https://pcbopcbo.github.io/files/vim_basic/part0002.xhtml">完整</a></p><h2 id="各种快捷技巧"><a href="#各种快捷技巧" class="headerlink" title="各种快捷技巧"></a>各种快捷技巧</h2><ul><li>[.]  重复操作</li><li>[u],[C-r]  回退重做命令</li><li>[:set hls] 高亮</li><li>[cw] 删除从光标位置到单词结尾间的字符，并进入插入模式<ul><li>[c3w]</li></ul></li><li>[f]  行内 单字母查找？[;] 重复查找上次 <code>f</code> 命令所查找的字符 </li><li>[s] 删除字母，并进入insert模式</li><li>[;] 重复上次[f]命令  带到下一个目标字符上，仅仅指字符</li><li>[:s/content/copy/g] 单行替换 content为copy</li><li>[:%s/content/copy/g] 全局替换 content为copy</li><li>[<esc>o ]</esc></li><li>[x] 删除字符</li><li>[db] 删除光标到单词开始的字符</li><li>[b] 移动到单词开头</li><li>[cc] 删除行</li><li>[dw] 删掉到单词结尾的字符  [2dw],[d2w]<ul><li>[daw]  删除一个单词</li></ul></li><li>[ C-a ],[c-x] 12[c-a] …   数字加减</li><li>[yyp]  复制一行</li><li>[daw],[dap],[dl]  </li><li>[gUaw]  当前单词转化为大写形式</li><li>一个操作符命令被连续调用两次时，它会作用于当前行  <code>dd</code> 删除当前行，而 <code>&gt;&gt;</code> 缩进当前行 <ul><li><code>gU</code> 命令是一种特殊情况，我们既可以用 <code>gUgU</code> ，也可以用简化版的 <code>gUU</code> 来使它作用于当前行。 </li></ul></li><li>[<strong><c-r>=</c-r></strong>6<em>35*</em><cr>** ] ，插入模式下使用，计算器</cr></li><li>[<c-v>u{1234}] , 以字符编码输入字符，[<c-v>u00bf ]  <code>¿</code>，[ga]，查看光标下字符的编码。<ul><li>如果<c-v> 后面是一个非数字键，则插入按键代表的本身字符   :h i_CTRL-V_digit </c-v></li><li><strong><c-k>{char1}{char2}</c-k></strong>   以二合字母插入不常用字符      :h digraphs-default </li></ul></c-v></c-v></li><li>[R] 替换模式 [gR] 虚拟替换模式<ul><li>单次版本的替换模式及虚拟替换模式。<code>r{char}</code> 和 <code>gr{char}</code> 命令允许覆盖一个字符，之后马上又回到普通模式 </li></ul></li><li><code>&lt;C-g&gt;</code> 可以在可视模式及选择模式间切换 </li><li><code>viw</code> 来高亮选择这个词   进入可视模式，高亮选择<ul><li><code>v</code> 进入可视模式  o切换选定方向</li></ul></li><li><code>:n</code>  跳转指定行</li><li>:h ex-cmd-index   Ex命令 ，命令行模式命令</li><li>Ex命令读写文件（<code>:edit</code> 和 <code>:write</code>）、创建新标签页（<code>:tabnew</code>）、分割窗口（<code>:split</code>）、操作参数列表（<code>:prev``/``:next</code>）及缓冲区列表（<code>:bprev``/``:bnext</code>） </li><li><code>:%s/replace/str</code>  <code>:3print</code>  替换，打印第三行  <code>:4</code>  跳转到第4行</li><li><code>先执行</code>2G<code>，再跟着执行</code>VG<code>，就会选中如下一个高亮选区</code>   <code>VG</code> 猜测是选定下一个高亮区</li><li>normal  对选中区做指定操作</li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><h4 id="一箭双雕"><a href="#一箭双雕" class="headerlink" title="一箭双雕"></a>一箭双雕</h4><p>我们可以这样说，A 命令把两个动作（$a）合并成了一次按键。不过它不是唯一一个这样的命令，很多Vim的单键命令都可以被看成两个或多个其他命令的组合。下表列出了类似的一些例子，你能找出它们之间别的共同点吗？</p><table><thead><tr><th>复合命令</th><th>等效的长命令</th></tr></thead><tbody><tr><td><strong>C</strong></td><td><strong>c$</strong></td></tr><tr><td><strong>s</strong></td><td><strong>cl</strong></td></tr><tr><td><strong>S</strong></td><td><strong>^C</strong></td></tr><tr><td><strong>I</strong></td><td><strong>^i</strong></td></tr><tr><td><strong>A</strong></td><td><strong>$a</strong></td></tr><tr><td><strong>o</strong></td><td><strong>A</strong></td></tr><tr><td><strong>O</strong></td><td><strong>ko</strong></td></tr></tbody></table><h4 id="可重复操作及如何回退"><a href="#可重复操作及如何回退" class="headerlink" title="可重复操作及如何回退"></a>可重复操作及如何回退</h4><p>表1-1　可重复的操作及如何回退</p><table><thead><tr><th>目的</th><th>操作</th><th>重复</th><th>回退</th></tr></thead><tbody><tr><td>做出一个修改</td><td>{edit}</td><td><strong>.</strong></td><td><strong>u</strong></td></tr><tr><td>在行内查找下一指定字符</td><td><strong>f{char}</strong>/<strong>t{char}</strong></td><td><strong>;</strong></td><td><strong>,</strong></td></tr><tr><td>在行内查找上一指定字符</td><td><strong>F{char}</strong>/<strong>T{char}</strong></td><td><strong>;</strong></td><td><strong>,</strong></td></tr><tr><td>在文档中查找下一处匹配项</td><td>/pattern</td><td><strong>n</strong></td><td><strong>N</strong></td></tr><tr><td>在文档中查找上一处匹配项</td><td>?pattern</td><td><strong>n</strong></td><td><strong>N</strong></td></tr><tr><td>执行替换</td><td>:s/target/replacement</td><td><strong>&amp;</strong></td><td><strong>u</strong></td></tr><tr><td>执行一系列修改</td><td><strong>qx{changes}q</strong></td><td><strong>@x</strong></td><td><strong>u</strong></td></tr></tbody></table><h4 id="Vim的操作符命令"><a href="#Vim的操作符命令" class="headerlink" title="Vim的操作符命令"></a>Vim的操作符命令</h4><p>表2-1　Vim的操作符命令</p><table><thead><tr><th>命令</th><th>用途</th></tr></thead><tbody><tr><td><strong>c</strong></td><td>修改</td></tr><tr><td><strong>d</strong></td><td>删除</td></tr><tr><td><strong>y</strong></td><td>复制到寄存器</td></tr><tr><td><strong>g~</strong></td><td>反转大小写</td></tr><tr><td><strong>gu</strong></td><td>转换为小写</td></tr><tr><td><strong>gU</strong></td><td>转换为大写</td></tr><tr><td><strong>&gt;</strong></td><td>增加缩进</td></tr><tr><td><strong>&lt;</strong></td><td>减小缩进</td></tr><tr><td><strong>=</strong></td><td>自动缩进</td></tr><tr><td><strong>!</strong></td><td>使用外部程序过滤{motion}所跨越的行</td></tr></tbody></table><h4 id="激活可视模式"><a href="#激活可视模式" class="headerlink" title="激活可视模式"></a>激活可视模式</h4><table><thead><tr><th>命令</th><th>用途</th></tr></thead><tbody><tr><td><strong>v</strong></td><td>激活面向字符的可视模式</td></tr><tr><td><strong>V</strong></td><td>激活面向行的可视模式</td></tr><tr><td><strong><c-v></c-v></strong></td><td>激活面向列块的可视模式</td></tr><tr><td><strong>gv</strong></td><td>重选上次的高亮选区</td></tr></tbody></table><h4 id="操作缓存区文本的Ex命令"><a href="#操作缓存区文本的Ex命令" class="headerlink" title="操作缓存区文本的Ex命令"></a>操作缓存区文本的Ex命令</h4><table><thead><tr><th>命令</th><th>用途</th></tr></thead><tbody><tr><td>:[range]delete [x]</td><td>删除指定范围内的行[到寄存器x中]</td></tr><tr><td>:[range]yank [x]</td><td>复制指定范围的行[到寄存器x中]</td></tr><tr><td>:[line]put [x]</td><td>在指定行后粘贴寄存器x中的内容</td></tr><tr><td>:[range]copy {address}</td><td>把指定范围内的行拷贝到 {address} 指定的行之下</td></tr><tr><td>:[range]move {address}</td><td>把指定范围内的行移动到 {address} 指定的行之下</td></tr><tr><td>:[range]join</td><td>连接指定范围内的行</td></tr><tr><td>:[range]normal {commands}</td><td>对指定范围内的每一行执行普通模式命令 {commands}</td></tr><tr><td>:[range]substitute/{pattern}/ {string}/[flags]</td><td>把指定范围内出现{pattern}的地方替换为{string}</td></tr><tr><td>:[range]global/{pattern}/[cmd]</td><td>对指定范围内匹配{pattern}的所有行执行Ex 命令{cmd}</td></tr></tbody></table><h4 id="构建-Ex-命令的地址及范围的符号总结"><a href="#构建-Ex-命令的地址及范围的符号总结" class="headerlink" title="构建 Ex 命令的地址及范围的符号总结"></a>构建 Ex 命令的地址及范围的符号总结</h4><table><thead><tr><th>符号</th><th>地址</th></tr></thead><tbody><tr><td>1</td><td>文件的第一行</td></tr><tr><td>$</td><td>文件的最后一行</td></tr><tr><td>0</td><td>虚拟行，位于文件第一行上方</td></tr><tr><td>.</td><td>光标所在行</td></tr><tr><td>‘m</td><td>包含位置标记m的行</td></tr><tr><td>‘&lt;</td><td>高亮选区的起始行</td></tr><tr><td>‘&gt;</td><td>高亮选区的结束行</td></tr><tr><td>%</td><td>整个文件（:1,$ 的简写形式）</td></tr></tbody></table><h4 id="vim的剪切板"><a href="#vim的剪切板" class="headerlink" title="vim的剪切板"></a>vim的剪切板</h4><p>vim 有 12 个剪切板，分别是 0、1、2、…、9、a、“、＋；用 :reg 命令可以查看各个剪切板里的内容。在 vim 中简单用 y 命令只是复制到 “（双引号）剪切板里，同样用 p 命令粘贴的也是这个粘贴板里的内容；</p><p>默认情况下使用的双引号的剪切板，+剪切板是系统剪切板。</p><p>可视模式下，可以使用 双引号+剪切板号+y/p命令分别实现复制和粘贴功能。</p><p>对比于Ex命令:copy(简写:t)来看的区别</p><p>:copy命令不占用寄存器（这里我实际使用了git bash使用的时候，发现会占用冒号寄存器来存储命令！！！尚不明确！）</p><p> <a href="/img/loading.gif" data-fancybox="group" data-caption="&quot;:t&quot; 占用冒号寄存器的情况" class="fancybox"><img alt="&quot;:t&quot; 占用冒号寄存器的情况" data-src="https://pcbopcbo.github.io/img/vim_ex_copy.gif" src="/img/loading.gif" class="lazyload" title="&quot;:t&quot; 占用冒号寄存器的情况"></a></p><p>Ex命令适合远端操作，普通命令适合本地操作（可以减少移动光标的操作，不过如果不知道具体行数也不省事，首尾添加多行的情况比较喜欢用这个）</p><ol><li><p>常用复制快捷命令：</p><p> yy    复制游标所在行整行<br> 2yy 或 y2y    复制 2 行<br> y^    复制至行首，或 y0<br> y$    复制至行尾<br> yw    复制一个 word<br> y2w    复制两个 word<br> yG    复制至文件尾<br> y1G    复制至文件首</p></li><li><p>常用剪切快捷命令： </p><p> dd    剪切游标所在行整行<br> d^    剪切至行首，或 d0<br> d$    剪切至行尾<br> dw    剪切一个 word<br> dG    剪切至文件尾 </p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper testingserver</title>
      <link href="/2020/01/16/20200116/"/>
      <url>/2020/01/16/20200116/</url>
      
        <content type="html"><![CDATA[<h1 id="zookeeper-testingserver"><a href="#zookeeper-testingserver" class="headerlink" title="zookeeper testingserver"></a>zookeeper testingserver</h1><p><a href="https://blog.csdn.net/en_joker/article/details/78792179" target="_blank" rel="noopener">zookeeper testingserver</a></p>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL的utf-8,utf8mb4,COLLATE</title>
      <link href="/2020/01/15/20200115/"/>
      <url>/2020/01/15/20200115/</url>
      
        <content type="html"><![CDATA[<h1 id="MYSQL的utf-8-utf8mb4-COLLATE"><a href="#MYSQL的utf-8-utf8mb4-COLLATE" class="headerlink" title="MYSQL的utf-8,utf8mb4,COLLATE"></a>MYSQL的utf-8,utf8mb4,COLLATE</h1><p>备记，链接1里面可以看到mysql中collate的介绍，链接2可以看到mysql的utf8mb4的前世今生</p><p><a href="https://www.jianshu.com/p/f8707b8461d3" target="_blank" rel="noopener">参考链接1</a></p><p><a href="https://blog.csdn.net/lizhengyu891231/article/details/90900818" target="_blank" rel="noopener">参考链接2  MySQL UTF-8 使用请注意</a></p>]]></content>
      
      
      <categories>
          
          <category> 备记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot分离式打包</title>
      <link href="/2020/01/14/20200114/"/>
      <url>/2020/01/14/20200114/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot分离式打包"><a href="#springboot分离式打包" class="headerlink" title="springboot分离式打包"></a>springboot分离式打包</h1><h2 id="springboot自带的打包方式"><a href="#springboot自带的打包方式" class="headerlink" title="springboot自带的打包方式"></a>springboot自带的打包方式</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;plugin&gt;</span><br></pre></td></tr></table></figure></div><p>springboot项目内嵌了服务中间件，打包的时候可以使用官方的插件，会得到一个jar，我们往往称之为“胖jar”，可以直接通过nohup java -jar xxx.jar 来运行，非常方便。但是这样的话，我们每次有一点改动就要打包一个几十MB，上百MB的jar包上传到服务器，我们能不能将项目依赖的jar包分离出来呢？</p><h2 id="springboot-简单分离式打包方式"><a href="#springboot-简单分离式打包方式" class="headerlink" title="springboot 简单分离式打包方式"></a>springboot 简单分离式打包方式</h2><h3 id="将原有的打包方式注释"><a href="#将原有的打包方式注释" class="headerlink" title="将原有的打包方式注释"></a>将原有的打包方式注释</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">    &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">&lt;/plugin&gt; --&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="增加新的打包方式"><a href="#增加新的打包方式" class="headerlink" title="增加新的打包方式"></a>增加新的打包方式</h3><p>Start-Class  的地方需要改成项目的启动类的类路径</p><p>exclude   需要注意根据各自的需要使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>org.springframework.boot.loader.JarLauncher<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                           <span class="comment">&lt;!-- 这里需要改成项目的启动类的类路径--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Start-Class</span>&gt;</span>cn.demo.thf.App<span class="tag">&lt;/<span class="name">Start-Class</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Spring-Boot-Classes</span>&gt;</span>/<span class="tag">&lt;/<span class="name">Spring-Boot-Classes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--将你不需要的配置文件剔除出去--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--  &lt;configuration&gt; 这里的配置是为了防止证书内的字符在打包的时候被转义导致不可用</span></span><br><span class="line"><span class="comment">                    &lt;nonFilteredFileExtensions&gt;</span></span><br><span class="line"><span class="comment">                        &lt;nonFilteredFileExtension&gt;p12&lt;/nonFilteredFileExtension&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                        &lt;nonFilteredFileExtension&gt;keystore&lt;/nonFilteredFileExtension&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    &lt;/nonFilteredFileExtensions&gt;</span></span><br><span class="line"><span class="comment">                &lt;/configuration&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h4 id="assembly-自定义依赖打包"><a href="#assembly-自定义依赖打包" class="headerlink" title="assembly  自定义依赖打包"></a>assembly  自定义依赖打包</h4><p>在这里，这一部分除了第一次部署的时候使用，其他时候都是注释掉的。src/main/assembly 是一个源文件夹，package.xml中定义了配置文件，依赖jar的打包方式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">descriptors</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">descriptor</span>&gt;</span>src/main/assembly/package.xml<span class="tag">&lt;/<span class="name">descriptor</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">descriptors</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h5 id="package-xml"><a href="#package-xml" class="headerlink" title="package.xml"></a>package.xml</h5><p>仅供参考：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">assembly</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>package<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">formats</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">format</span>&gt;</span>zip<span class="tag">&lt;/<span class="name">format</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">formats</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includeBaseDirectory</span>&gt;</span>false<span class="tag">&lt;/<span class="name">includeBaseDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fileSets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>etc<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>etc<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>etc<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fileSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/scripts<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>tools<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>start.bat<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>start.sh<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>restart.sh<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>stop.sh<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>check.sh<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>db/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fileMode</span>&gt;</span>0755<span class="tag">&lt;/<span class="name">fileMode</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fileSet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fileSets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencySets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencySet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencySet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencySets</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h3><p>这种情况下，项目的启动方式也变得不一样了，下面是启动脚本的示例</p><h5 id="bash版本"><a href="#bash版本" class="headerlink" title="bash版本"></a>bash版本</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#****1.check JDK******</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$JAVA_HOME</span>"</span> == <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"pls set JAVA_HOME first"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">date_string=`date +<span class="string">"%Y-%m-%d %H:%M:%S"</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-----start脚本开始---"</span><span class="variable">$date_string</span><span class="string">"---------"</span></span><br><span class="line">basepath=$(<span class="built_in">cd</span> `dirname <span class="variable">$0</span>`/../; <span class="built_in">pwd</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"工作目录："</span><span class="variable">$basepath</span></span><br><span class="line"></span><br><span class="line">APP_HOME=<span class="variable">$basepath</span></span><br><span class="line">filepath=<span class="variable">$APP_HOME</span>/logs</span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">"<span class="variable">$filepath</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir  <span class="variable">$filepath</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">filepath=<span class="variable">$APP_HOME</span>/tmp</span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">"<span class="variable">$filepath</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir <span class="variable">$filepath</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">MIN_MEM=128m</span><br><span class="line">MAX_MEM=256m</span><br><span class="line">COREDUMP_PATH=<span class="variable">$&#123;APP_HOME&#125;</span>/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里仍然需要改动配置为项目的启动类路径</span></span><br><span class="line">MAIN_FUNC=cn.demo.thf.App</span><br><span class="line"></span><br><span class="line">date_string=`date +<span class="string">"%Y-%m-%d %H:%M:%S"</span>`</span><br><span class="line"></span><br><span class="line">CLASSPATH=<span class="string">"-classpath .:<span class="variable">$&#123;APP_HOME&#125;</span>/etc/:<span class="variable">$&#123;APP_HOME&#125;</span>/lib/* "</span></span><br><span class="line">JAVA_OPTS=<span class="string">"-server -Xms<span class="variable">$&#123;MIN_MEM&#125;</span> -Xmx<span class="variable">$&#123;MAX_MEM&#125;</span> "</span></span><br><span class="line">CORE_OPTS=<span class="string">"-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=<span class="variable">$&#123;COREDUMP_PATH&#125;</span>"</span></span><br><span class="line">ALL_JAVA_OPTIONS=<span class="variable">$&#123;JAVA_OPTS&#125;</span><span class="variable">$&#123;CLASSPATH&#125;</span><span class="variable">$&#123;CORE_OPTS&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-------"</span><span class="variable">$date_string</span><span class="string">"----------"</span>&gt;../logs/log.txt</span><br><span class="line"><span class="comment">#nohup java -server -Detcpath=$ETCPATH  $MAIN_FUNC&gt;&gt;$APP_HOME/logs/log.txt 2&gt;&gt;$APP_HOME/logs/log.txt&amp;</span></span><br><span class="line">nohup <span class="variable">$JAVA_HOME</span>/bin/java <span class="variable">$&#123;ALL_JAVA_OPTIONS&#125;</span>  -Djava.io.tmpdir=<span class="variable">$&#123;APP_HOME&#125;</span>/tmp/ -Dspring.config.location=<span class="variable">$&#123;APP_HOME&#125;</span>/etc/ <span class="variable">$MAIN_FUNC</span>&gt;&gt;<span class="variable">$APP_HOME</span>/logs/log.txt 2&gt;&gt;<span class="variable">$APP_HOME</span>/logs/log.txt&amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> ---------------start脚本结束！---------------</span><br><span class="line"><span class="built_in">echo</span>  </span><br><span class="line"><span class="comment">#tailf $APP_HOME/logs/log.txt</span></span><br></pre></td></tr></table></figure></div><h4 id="bat版本"><a href="#bat版本" class="headerlink" title="bat版本"></a>bat版本</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bat</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@ <span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> %~dp0</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"><span class="built_in">set</span> APP_HOME=<span class="variable">%cd%</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> tools</span><br><span class="line"><span class="built_in">set</span> ETCPATH=<span class="variable">%APP_HOME%</span>\etc</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> MAIN_FUNC=cn.demo.thf.App</span><br><span class="line"><span class="built_in">set</span> MIN_MEM=<span class="number">128</span>m</span><br><span class="line"><span class="built_in">set</span> MAX_MEM=<span class="number">256</span>m</span><br><span class="line"><span class="built_in">set</span> COREDUMP_PATH=<span class="variable">%APP_HOME%</span>\logs</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> CLASSPATH=-classpath <span class="variable">%APP_HOME%</span>\etc\;<span class="variable">%APP_HOME%</span>\lib\* </span><br><span class="line"><span class="built_in">set</span> JAVA_OPTS=-server -Xms<span class="variable">%MIN_MEM%</span> -Xmx<span class="variable">%MAX_MEM%</span> </span><br><span class="line"><span class="built_in">set</span> CORE_OPTS=-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=<span class="variable">%COREDUMP_PATH%</span>"</span><br><span class="line"><span class="built_in">set</span> ALL_JAVA_OPTIONS=<span class="variable">%JAVA_OPTS%</span><span class="variable">%CLASSPATH%</span><span class="variable">%CORE_OPTS%</span></span><br><span class="line"></span><br><span class="line">java -classpath <span class="variable">%APP_HOME%</span>\etc\;<span class="variable">%APP_HOME%</span>\lib\* -Dspring.config.location=<span class="variable">%APP_HOME%</span>\etc\ <span class="variable">%MAIN_FUNC%</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> "******************************"%APP_HOME***********************************"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></div><h3 id="最终的目录结构类似于下面这样"><a href="#最终的目录结构类似于下面这样" class="headerlink" title="最终的目录结构类似于下面这样"></a>最终的目录结构类似于下面这样</h3><p><a href="/img/loading.gif" data-fancybox="group" data-caption="1578995741120" class="fancybox"><img alt="1578995741120" data-src="https://pcbopcbo.github.io/img/springboot%E5%88%86%E7%A6%BB%E5%BC%8F%E6%89%93%E5%8C%85.assets/1578995741120.png" src="/img/loading.gif" class="lazyload" title="1578995741120"></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件编码、字符集，编码集，UTF-8，GBK等</title>
      <link href="/2020/01/10/20200110/"/>
      <url>/2020/01/10/20200110/</url>
      
        <content type="html"><![CDATA[<h1 id="文件编码"><a href="#文件编码" class="headerlink" title="文件编码"></a>文件编码</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.jeepxie.net/article/271098.html" target="_blank" rel="noopener">参考链接1 -从字符编码的发展历史理解ANSI、GB2312、Unicode、UTF8和UTF16区别</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" target="_blank" rel="noopener">参考链接2 -字符编码</a></p><p><a href="https://pcbopcbo.github.io/files/wiki1.pdf">参考链接2 -字符编码pdf版</a></p><p><a href="https://blog.csdn.net/lxpblsc/article/details/9619295" target="_blank" rel="noopener">参考链接3 区位码、国标码、机内码的区别和内在机制 </a></p><p><a href="https://jerryc.me/posts/f5f84b52/" target="_blank" rel="noopener">[参考链接4  推荐阅读，总结的最好的一篇 关于字符编码，你所需要知道的]ASCII,Unicode,Ut</a> </p><p>[<a href="https://pcbopcbo.github.io/files/blog1.pdf">参考链接4 pdf版</a> </p><p><a href="https://baike.baidu.com/item/ISO8859/8581782?fromtitle=ISO-8859&fromid=834118" target="_blank" rel="noopener">参考链接5 百度百科 ISO8859</a></p><p><a href="https://www.cnblogs.com/tupx/articles/3503924.html" target="_blank" rel="noopener">参考链接6 编码的故事</a></p><p><a href="https://blog.csdn.net/lizhengyu891231/article/details/90900818" target="_blank" rel="noopener">参考链接7  MySQL UTF-8 使用请注意</a></p><h2 id="文件编码总结"><a href="#文件编码总结" class="headerlink" title="文件编码总结"></a>文件编码总结</h2><p>一直对于字符编码，编码集，utf-8，gbk，gb2312,iso8859,这样的概念搞得一脑袋懵，现在参考网上的一些知识，尝试下对它们做下总结。</p><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><p>关于字符编码、子集码、字符集、现代编码模型的解释，可以查看<a href="#参考链接">参考链接</a></p><p>以我自己的理解来说</p><ul><li><p><strong><em>字符编码</em></strong> 可以是指一个特定对象的编码，比如说三原色，把一种颜色称之为红，另外一种为绿，最一种为蓝。</p></li><li><p><strong><em>编码集</em></strong>，<strong><em>字符集</em></strong> , 不同的标准下编码的规则是不一致的，同一个标准下的编码单元集合就是一个字符集。计算机发展的早期，逐渐产生了<strong><em>ASCII(1963)</em></strong>和<strong><em>EBCDIC(1964)</em></strong>。这里也说 <strong><em>字符编码</em></strong>，<strong><em>编码集</em></strong>，<strong><em>字符集</em></strong>的概念也可以认为是一种概念，不过方便理解我自己区分了一下。</p></li><li><p><strong><em>简单字符集</em></strong>，应该就是指上面的<em>ASCII(1963)</em>和<em>EBCDIC(1964)</em>这两种字符编码时期的概念。</p></li><li><p><strong><em>现代编码模型</em></strong>，区别于<strong><em>简单字符集</em></strong>，由<strong><em>统一码</em></strong>和<strong><em>通用字符集</em></strong>构成。<strong><em>字符编码</em></strong>的概念被分解为：</p><ol><li>有哪些字符  (抽象字符表)</li><li>字符的编号  （编码字符集，引申出了编码空间，码位，码位值）</li><li>这些编号如何编码成一系列的“码元” （字符编码表）</li><li>如何组成八位字节流 （字符编码方案，将码元映射到8位字节序列，以便编码后数据的存储等，Unicode需要一个字符指定大端序小端序，utf-8不需要，ISO/IEC 2022 使用控制字符转义序列）（传输编码语法）</li></ol></li><li><p><strong><em>字符集</em></strong>，<strong><em>代码页</em></strong>，<strong><em>字符映射</em></strong></p><ul><li><p><strong><em>码元</em></strong>，已编码的文本中具有最短比特组合的单元，如utf-8是8比特长</p></li><li><p><strong><em>代码页</em></strong>，通常意味着面向字节的编码，强调是一套用于不能语言的编码方案的集合,如”windows”代码页系列，“IBM/DOW代码页系列”</p><ul><li>Unix与linux不使用代码页系列</li></ul></li></ul></li></ul><h3 id="多字节字符集（MBCS）和中文字符集"><a href="#多字节字符集（MBCS）和中文字符集" class="headerlink" title="多字节字符集（MBCS）和中文字符集"></a>多字节字符集（MBCS）和中文字符集</h3><p>理解了上面的概念，起码大概有一个印象（比如本人）接下来，可以查看参考链接4 的1.3章 <a href="#参考链接">参考链接</a> </p><p>单字节字符集是对于英文来说的，甚至于说是拉丁语系都没有问题，256个字符已经足够用了。但是对于其他语种，比如说是中文，单字节字符集已经不够用了。多字节字符集是兼容<strong><em>ASCII(1963)</em></strong>的。</p><p><strong><em>代码页</em></strong>，这里用到代码页的概念。</p><p>常用的中文字符集是GB2312、GBK，其中GB2312涵盖了所有的简体字符集和其他的字符，GBK(K代表扩展)加入了繁体字等，GB18030不常用到（本人没用过）</p><blockquote><p>Windows系统採用936代码页来实现对GBK字符集的编解码。在解析字节流的时候，如果遇到字节的最高位是0的话，那么就使用936代码页中的第1张码錶进行解码，这就和单字节字符集的编解码方式一致了。</p></blockquote><h3 id="ANSI标準、国家标準、ISO标準"><a href="#ANSI标準、国家标準、ISO标準" class="headerlink" title="ANSI标準、国家标準、ISO标準"></a>ANSI标準、国家标準、ISO标準</h3><blockquote><p>不同ASCII衍生字符集的出现，让文档交流变得非常困难，因此各种组织都陆续进行了标準化流程。例如美国ANSI组织制定了ANSI标準字符编码（注意，我们现在通常説到ANSI编码，通常指的是平台的默认编码，例如英文操作系统中是ISO-8859-1，中文系统是GBK），ISO组织制定的各种ISO标準字符编码，还有各国也会制定一些国家标準字符集，例如中国的GBK，GB2312和GB18030。</p></blockquote><h3 id="Unicode的出现"><a href="#Unicode的出现" class="headerlink" title="Unicode的出现"></a>Unicode的出现</h3><blockquote><p>虽然通过使用不同字符集，我们可以在一台机器上查閲不同语言的文档，但是我们仍然无法解决一个问题：在一份文档中显示所有字符。为了解决这个问题，我们需要一个全人类达成共识的巨大的字符集，这就是Unicode字符集。</p></blockquote><p>UTF-8应该是目前应用最广泛的一种Unicode编码方案。</p><p>文件编码格式的检测找不到一个可靠的工具，从上面的各个博客看来，各种兼容的历史问题导致的这一问题。</p><p>下面是遇到的一些编码的问题，应该都是从网上摘抄来的，备记一下，但是已经不记得出处了，抱歉抱歉。</p><h3 id="linux的cp936"><a href="#linux的cp936" class="headerlink" title="linux的cp936"></a>linux的cp936</h3><blockquote><p>一直为GB2312，GBK，GB18030和CP936之间的关系头痛，今天得到Python群里一位高人指点，明白了cp936就是指系统里第936号编码格式，也就是GB2312。 </p></blockquote><h3 id="vim设置读取不同编码格式的文件"><a href="#vim设置读取不同编码格式的文件" class="headerlink" title="vim设置读取不同编码格式的文件"></a>vim设置读取不同编码格式的文件</h3><p> 在 ~/.vimrc 文件中加入下面这段内容</p><blockquote><p>:set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936</p></blockquote><h3 id="设置别名，用来转换文件编码格式，参考使用"><a href="#设置别名，用来转换文件编码格式，参考使用" class="headerlink" title="设置别名，用来转换文件编码格式，参考使用"></a>设置别名，用来转换文件编码格式，参考使用</h3><blockquote><p>alias gbk2utf8=’iconv -f gbk -t utf-8’</p></blockquote><h3 id="查看支持的编码格式"><a href="#查看支持的编码格式" class="headerlink" title="查看支持的编码格式"></a>查看支持的编码格式</h3><blockquote><p>iconv -l|grep UTF-8</p></blockquote><h3 id="查看文件编码格式"><a href="#查看文件编码格式" class="headerlink" title="查看文件编码格式"></a>查看文件编码格式</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file  文件名</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">vim  文件</span><br><span class="line"></span><br><span class="line">:set fileencoding</span><br></pre></td></tr></table></figure></div><p>使用file命令查看文件的时候有时候会看到</p><p><a href="/img/loading.gif" data-fancybox="group" data-caption="1578990932276" class="fancybox"><img alt="1578990932276" data-src="https://pcbopcbo.github.io/img/%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E.assets/1578990932276.png" src="/img/loading.gif" class="lazyload" title="1578990932276"></a></p><p>4.txt中有数字字符，简体中文，繁体中文，非常令人迷惑！使用vim的时候可以看到是cp936。</p><blockquote><p><strong>sed -i ‘s/\r//’ filename</strong> </p><p>替换换行符的方式</p></blockquote><h3 id="mysql-的utf-8格式"><a href="#mysql-的utf-8格式" class="headerlink" title="mysql 的utf-8格式"></a>mysql 的utf-8格式</h3><p>mysql使用utf-8格式的时候一定要慎重，我们广为人知的utf-8格式在mysql中的名字是utf8mb4 ，这也是为了防止莫名其妙的乱码问题。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 文件编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo简单发布使用学习</title>
      <link href="/2020/01/07/20200107/"/>
      <url>/2020/01/07/20200107/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo简单发布使用学习"><a href="#hexo简单发布使用学习" class="headerlink" title="hexo简单发布使用学习"></a>hexo简单发布使用学习</h1><p><a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">学习参考摘抄链接</a></p><h2 id="前置使用环境要求"><a href="#前置使用环境要求" class="headerlink" title="前置使用环境要求"></a>前置使用环境要求</h2><ul><li>git</li><li>nodejs</li></ul><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ol><li><p>安装hexo</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div></li><li><p>初始化</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init 初始化文件夹</span><br><span class="line">例如：hexo init MyBlog</span><br><span class="line">cd MyBlog      &#x2F;&#x2F;进入这个MyBlog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></div></li><li><p>本地查看</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g    &#x2F;&#x2F;生成静态文件</span><br><span class="line">hexo server(或者简写:hexo s）)  &#x2F;&#x2F; 打开本地服务</span><br></pre></td></tr></table></figure></div></li><li><p>书写文章</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git &#x2F;&#x2F; 安装扩展   （第一次用的这个后面新建文章报错了。。。）</span><br><span class="line">或者 npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">hexo new post &quot;articl title&quot;    &#x2F;&#x2F; 新建文章</span><br></pre></td></tr></table></figure></div><p> <em>Page Front-matter</em></p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: （tags,link,categories这三个页面需要配置）</span><br><span class="line">comments: (是否需要显示评论，默认true)</span><br><span class="line">description:</span><br><span class="line">top_img: (设置顶部图)</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div><p>   <em>Page Front-matter</em></p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: （除非特定需要，可以不写）</span><br><span class="line">comments  是否显示评论（除非设置false,可以不写）</span><br><span class="line">cover:  缩略图</span><br><span class="line">toc:  是否显示toc （除非特定文章设置，可以不写）</span><br><span class="line">toc_number: 是否显示toc数字 （除非特定文章设置，可以不写）</span><br><span class="line">copyright: 是否显示版权 （除非特定文章设置，可以不写）</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">hide:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div></li></ol><ol start="5"><li><p>发布</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean&#x2F;&#x2F; 清除静态文件</span><br><span class="line">hexo generate       &#x2F;&#x2F;生成静态</span><br><span class="line">hexo deploy(简写 hexo d)   &#x2F;&#x2F;上传到github并部署</span><br></pre></td></tr></table></figure></div><h2 id="hexo-定制使用"><a href="#hexo-定制使用" class="headerlink" title="hexo 定制使用"></a>hexo 定制使用</h2><p> <strong>中间发现git bash中无法使用tree，发现下面这个博客，</strong></p><p> <strong><a href="https://www.cnblogs.com/snowdreams1006/p/10812861.html" target="_blank" rel="noopener">真刚tree.exe</a></strong></p></li></ol><p><a href="/img/loading.gif" data-fancybox="group" data-caption="1578388385115" class="fancybox"><img alt="1578388385115" data-src="https://pcbopcbo.github.io/img/hello-world.assets/1578388385115.png" src="/img/loading.gif" class="lazyload" title="1578388385115"></a></p><blockquote><p><code>node_modules</code>是<code>node.js</code>各种库的目录，<code>public</code>是生成的网页文件目录，<code>scaffolds</code>里面就三个文件，存储着新文章和新页面的初始设置，<code>source</code>是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，<code>themes</code>存放着主题文件，一般也用不到。</p><p>我们平时写文章只需要关注<code>source/_posts</code>这个文件夹就行了。</p><p>来源: 洪卫の博客</p></blockquote><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><p>文件根目录的 <code>__config.yml</code> </p><p>​    <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">hexo官方文档</a></p><h2 id="不同电脑上如何快速转移"><a href="#不同电脑上如何快速转移" class="headerlink" title="不同电脑上如何快速转移"></a>不同电脑上如何快速转移</h2><p>瞎捣鼓了一阵子，发现最好最省事的方法就是</p><ul><li>重新布置一个全新的文件夹，按步骤来就行</li><li>把原来的source，theme，配置文件等覆盖过来就行了</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
